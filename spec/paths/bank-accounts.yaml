post:
  tags:
    - Bank Accounts
  summary: Create a Bank Account
  operationId: PostBankAccount
  description: |
    Create a Bank Account
  requestBody:
    content:
      application/json:
        schema:
          oneOf:
            - $ref: '#/components/schemas/BankAccountCreateToken'
            - $ref: '#/components/schemas/BankAccountCreatePlain'
    description: BankAccount resource
    required: true
  responses:
    '201':
      description: Bank Account was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccount'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        $bankAccountForm = new Rebilly\Entities\BankAccount();
        $bankAccountForm->setCustomerId('customerId');
        $bankAccountForm->setRoutingNumber('0123456');
        $bankAccountForm->setAccountNumber('0123456');
        $bankAccountForm->setAccountType('checking');
        $bankAccountForm->setBillingAddress([
            'firstName' => 'John',
            'lastName' => 'Doe',
            'organization' => 'Test LTD',
            'address' => 'Test street 5',
            'address2' => 'Test house 5',
            'city' => 'New York',
            'region' => 'Long Island',
            'country' => 'US',
            'postalCode' => '123456',
            'emails' => [
                [
                    'label' => 'main',
                    'value' => 'johndoe@testemail.com',
                    'primary' => true,
                ],
                [
                    'label' => 'secondary',
                    'value' => 'otheremail@testemail.com',
                ],
            ],
            'phoneNumbers' => [
                [
                    'label' => 'work',
                    'value' => '+123456789',
                    'primary' => true,
                ],
                [
                    'label' => 'home',
                    'value' => '+9874654321',
                ],
            ],
        ]);

        try {
            $bankAccount = $client->bankAccounts()->create($bankAccountForm);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
get:
  tags:
    - Bank Accounts
  summary: Retrieve a list of bank accounts
  operationId: GetBankAccountCollection
  description: |
    Retrieve a list of Bank Accounts
  parameters:
    - $ref: '#/components/parameters/collectionLimit'
    - $ref: '#/components/parameters/collectionOffset'
  responses:
    '200':
      description: A list of Bank Accounts was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
        Pagination-Total:
          $ref: '#/components/headers/Pagination-Total'
        Pagination-Limit:
          $ref: '#/components/headers/Pagination-Limit'
        Pagination-Offset:
          $ref: '#/components/headers/Pagination-Offset'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BankAccount'
    '401':
      $ref: '#/components/responses/AccessForbidden'
  x-code-samples:
    - lang: PHP
      source: |
        $bankAccounts = $client->bankAccounts()->search([
            'filter' => 'customerId:testId',
        ]);
