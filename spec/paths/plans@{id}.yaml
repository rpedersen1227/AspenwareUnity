parameters:
  - $ref: '#/components/parameters/resourceId'
get:
  tags:
    - Plans
  summary: Retrieve a plan
  operationId: GetPlan
  description: |
    Retrieve a plan with specified identifier string
  responses:
    '200':
      description: Plan was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Plan'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
  x-code-samples:
    - lang: PHP
      source: |
        $plan = $client->plans()->load('planId');
put:
  tags:
    - Plans
  summary: Create or update a Plan with predefined ID
  operationId: PutPlan
  description: |
    Create or update a Plan with predefined identifier string
  requestBody:
    $ref: '#/components/requestBodies/Plan'
  responses:
    '200':
      description: Plan was updated
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Plan'
    '201':
      description: Plan was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Plan'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        $planForm = new Rebilly\Entities\Plan();
        $planForm->setName('TestPlan');
        $planForm->setCurrency('USD');
        $planForm->setTrialAmount(1);
        $planForm->setTrialPeriodUnit('day');
        $planForm->setTrialPeriodLength(1);

        try {
            $plan = $client->plans()->update('planId', $planForm);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
delete:
  tags:
    - Plans
  summary: Delete a Plan
  operationId: DeletePlan
  description: |
    Delete a Plan with predefined identifier string
  responses:
    '204':
      description: Plan was deleted
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
    '409':
      $ref: '#/components/responses/Conflict'
  x-code-samples:
    - lang: PHP
      source: |
        $client->plans()->delete('planId');
