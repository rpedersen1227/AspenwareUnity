get:
  tags:
    - Coupons
  summary: Retrieve a list of coupon redemptions
  operationId: GetCouponRedemptionCollection
  parameters:
    - $ref: '#/components/parameters/collectionLimit'
    - $ref: '#/components/parameters/collectionOffset'
    - $ref: '#/components/parameters/collectionFilter'
    - $ref: '#/components/parameters/collectionQuery'
    - $ref: '#/components/parameters/collectionSort'
  responses:
    '200':
      description: Coupons redemptions were retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
        Pagination-Total:
          $ref: '#/components/headers/Pagination-Total'
        Pagination-Limit:
          $ref: '#/components/headers/Pagination-Limit'
        Pagination-Offset:
          $ref: '#/components/headers/Pagination-Offset'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CouponRedemption'
    '401':
      $ref: '#/components/responses/AccessForbidden'
  x-code-samples:
    - lang: PHP
      source: |
        $couponRedemptions = $client->couponsRedemptions()->search([
            'filter' => 'customerId:testCustomer',
        ]);
post:
  tags:
    - Coupons
  summary: Redeem a coupon
  operationId: PostCouponRedemption
  description: |
    Redeem a coupon
  requestBody:
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/CouponRedemption'
    description: Redeem a coupon
    required: true
  responses:
    '201':
      description: Coupon was redeemed
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CouponRedemption'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        $redemptionForm = new Rebilly\Entities\Coupons\Redemption();
        $redemptionForm->setCustomerId('customerId');
        $redemptionForm->setRedemptionCode('redemptionCode');

        $restrictionArray = [
            'type' => Rebilly\Entities\Coupons\Restriction::TYPE_DISCOUNTS_PER_REDEMPTION,
            'quantity' => 2,
        ];

        $restrictionForm = new Rebilly\Entities\Coupons\Restriction([
            $restrictionArray,
        ]);

        $redemptionForm->setAdditionalRestrictions($restrictionForm);

        try {
            $couponRedemption = $client->couponsRedemptions()->redeem($redemptionForm);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
