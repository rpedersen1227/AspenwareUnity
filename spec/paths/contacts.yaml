get:
  tags:
    - Contacts
  summary: Retrieve a list of contacts
  operationId: GetContactCollection
  description: |
    Retrieve a list of contacts.  This may be useful
    when giving the customer a choice between previous
    addresses they've used before.
  parameters:
    - $ref: '#/components/parameters/collectionLimit'
    - $ref: '#/components/parameters/collectionOffset'
  responses:
    '200':
      description: A list of Contacts was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
        Pagination-Total:
          $ref: '#/components/headers/Pagination-Total'
        Pagination-Limit:
          $ref: '#/components/headers/Pagination-Limit'
        Pagination-Offset:
          $ref: '#/components/headers/Pagination-Offset'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Contact'
    '401':
      $ref: '#/components/responses/AccessForbidden'
  x-code-samples:
    - lang: PHP
      source: |
        $contacts = $client->contacts()->search([
            'filter' => 'firstName:John',
        ]);
post:
  tags:
    - Contacts
  summary: Create a contact
  operationId: PostContact
  description: |
    Contacts are created automatically by data passed to the 
    contact-related hashes within the customer, invoice,
    payment instrument (like payment card), subscriptions,
    and more.    
    <div class="alert alert-warning">
      Note: This method should almost never be used.
      Please check with us on your use case before using it.
    </div>  
  requestBody:
    $ref: '#/components/requestBodies/Contact'
  responses:
    '201':
      description: Contact was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        $contactForm = new Rebilly\Entities\Contact();
        $contactForm->setFirstName('Sherlock');
        $contactForm->setLastName('Holmes');
        $contactForm->setOrganization('TestOrganization');
        $contactForm->setEmails(
            [
                [
                    'label' => 'main',
                    'value' => 'johndoe@testemail.com',
                    'primary' => true,
                ],
                [
                    'label' => 'secondary',
                    'value' => 'otheremail@testemail.com',
                ],
            ]
        );
        $contactForm->setPhoneNumbers(
            [
                [
                    'label' => 'work',
                    'value' => '+123456789',
                    'primary' => true,
                ],
                [
                    'label' => 'home',
                    'value' => '+9874654321',
                ],
            ]
        );

        try {
            $contact = $client->contacts()->create($contactForm);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
