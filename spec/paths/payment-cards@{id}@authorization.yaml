parameters:
  - $ref: '#/components/parameters/resourceId'
post:
  tags:
    - Payment Cards
  summary: Authorize a Payment Card
  operationId: PostPaymentCardAuthorization
  description: |
    Authorize a Payment Card
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
            - websiteId
            - currency
          properties:
            websiteId:
              description: The Website ID
              type: string
            currency:
              allOf:
                - $ref: '#/components/schemas/CurrencyCode'
            gatewayAccountId:
              description: The Gateway account ID
              type: string
            amount:
              description: Amount
              type: number
              format: double
            redirectUrl:
              description: Redirect URL
              type: string
    description: Payment Card resource
    required: true
  responses:
    '201':
      description: Payment Card was authorized
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentCard'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: >
        $paymentCardAuthorizationForm = new
        Rebilly\Entities\PaymentCardAuthorization();

        $paymentCardAuthorizationForm->setWebsiteId('websiteId');

        $paymentCardAuthorizationForm->setCurrency('USD');

        $paymentCardAuthorizationForm->setGatewayAccountId('gatewayAccountId');


        try {
            $paymentCard = $client->paymentCards()->authorize('paymentCardId', $paymentCardAuthorizationForm);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
