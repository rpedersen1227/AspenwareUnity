parameters:
  - $ref: '#/components/parameters/resourceId'
get:
  tags:
    - Disputes
  summary: Retrieve a dispute
  operationId: GetDispute
  description: |
    Retrieve a dispute with specified identifier string
  responses:
    '200':
      description: Dispute was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Dispute'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
  x-code-samples:
    - lang: PHP
      source: |
        $dispute = $client->disputes()->load('disputeId');
put:
  tags:
    - Disputes
  summary: Create or update a Dispute with predefined ID
  operationId: PutDispute
  description: |
    Create or update a Dispute with predefined identifier string
  requestBody:
    $ref: '#/components/requestBodies/Dispute'
  responses:
    '200':
      description: Dispute was updated
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Dispute'
    '201':
      description: Dispute was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Dispute'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        $disputeForm = new Rebilly\Entities\Dispute();
        $disputeForm->setTransactionId('transactionId');
        $disputeForm->setCurrency('USD');
        $disputeForm->setAmount(10);
        $disputeForm->setReasonCode(1000);
        $disputeForm->setType($disputeForm::TYPE_1CB);
        $disputeForm->setStatus($disputeForm::STATUS_RESPONSE_NEEDED);
        $disputeForm->setPostedTime('2025-01-01 05:00:00');

        try {
            $dispute = $client->disputes()->update('disputeId', $dispute);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
