parameters:
  - $ref: '#/components/parameters/resourceId'
get:
  tags:
    - Invoices
  summary: Retrieve invoice items
  operationId: GetInvoiceItemCollection
  description: |
    Retrieve an invoice items with specified invoice identifier string
  parameters:
    - $ref: '#/components/parameters/collectionLimit'
    - $ref: '#/components/parameters/collectionOffset'
  responses:
    '200':
      description: Invoice items were retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InvoiceItem'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
  x-code-samples:
    - lang: PHP
      source: |
        $invoiceItems = $client->invoiceItems()->search('invoiceId', [
            'filter' => 'quantity:5',
        ]);
post:
  tags:
    - Invoices
  summary: Create an invoice item
  operationId: PostInvoiceItem
  description: |
    Create an invoice item
  requestBody:
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/InvoiceItem'
    description: InvoiceItem resource
    required: true
  responses:
    '201':
      description: InvoiceItem was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceItem'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        $invoiceItemForm = new Rebilly\Entities\InvoiceItem();
        $invoiceItemForm->setType($invoiceItemForm::TYPE_DEBIT);
        $invoiceItemForm->setUnitPrice(0.99);
        $invoiceItemForm->setQuantity(5);

        try {
            $invoiceItem = $client->invoiceItems()->create($invoiceItemForm, 'invoiceId');
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
