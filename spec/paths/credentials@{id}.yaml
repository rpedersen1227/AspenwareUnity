parameters:
  - $ref: '#/components/parameters/resourceId'
get:
  tags:
    - Customer Authentication
  summary: Retrieve a credential
  operationId: GetCredential
  description: |
    Retrieve a credential with specified identifier string
  responses:
    '200':
      description: Credential was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credential'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
  x-code-samples:
    - lang: PHP
      source: >
        $customerCredential =
        $client->customerCredentials()->load('credentialId');
put:
  tags:
    - Customer Authentication
  summary: Create or update a credential with predefined ID
  operationId: PutCredential
  description: |
    Create or update a credential with predefined identifier string
  requestBody:
    $ref: '#/components/requestBodies/Credential'
  responses:
    '200':
      description: Credential was updated
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credential'
    '201':
      description: Credential was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credential'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        $customerCredentialForm = new Rebilly\Entities\CustomerCredential();
        $customerCredentialForm->setCustomerId('customerId');
        $customerCredentialForm->setUsername('test');
        $customerCredentialForm->setPassword('1234');

        try {
            $customerCredential = $client->customerCredentials()->update('credentialId', $customerCredentialForm);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
delete:
  tags:
    - Customer Authentication
  summary: Delete a credential
  operationId: DeleteCredential
  description: |
    Delete a credential with predefined identifier string
  responses:
    '204':
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      description: Credential was deleted
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
  x-code-samples:
    - lang: PHP
      source: |
        $client->customerCredentials()->delete('credentialId');
