parameters:
  - $ref: '#/components/parameters/resourceId'
get:
  tags:
    - PayPal Accounts
  summary: Retrieve a PayPal Account
  operationId: GetPayPalAccount
  description: |
    Retrieve a PayPal Account with specified identifier string
  responses:
    '200':
      description: PayPal Account was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayPalAccount'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
  x-code-samples:
    - lang: PHP
      source: |
        $payPalAccount = $client->payPalAccounts()->load('payPalAccountId');
put:
  tags:
    - PayPal Accounts
  summary: Create a PayPal account with predefined ID
  operationId: PutPayPalAccount
  requestBody:
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/PayPalAccount'
    description: PayPal Account
    required: true
  responses:
    '201':
      description: PayPal Account was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PayPalAccount'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '409':
      description: PayPal Account exist and cannot be updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        $payPalForm = new Rebilly\Entities\PayPalAccount();
        $payPalForm->setCustomerId('customerId');
        $payPalForm->setBillingAddress([
            'firstName' => 'John',
            'lastName' => 'Doe',
            'organization' => 'Test LTD',
            'address' => 'Test street 5',
            'address2' => 'Test house 5',
            'city' => 'New York',
            'region' => 'Long Island',
            'country' => 'US',
            'postalCode' => '123456',
            'emails' => [
                [
                    'label' => 'main',
                    'value' => 'johndoe@testemail.com',
                    'primary' => true,
                ],
                [
                    'label' => 'secondary',
                    'value' => 'otheremail@testemail.com',
                ],
            ],
            'phoneNumbers' => [
                [
                    'label' => 'work',
                    'value' => '+123456789',
                    'primary' => true,
                ],
                [
                    'label' => 'home',
                    'value' => '+9874654321',
                ],
            ],
        ]);

        try {
            $payPalAccount = $client->payPalAccounts()->create($payPalForm, 'payPalAccountId');
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
