parameters:
  - $ref: '#/components/parameters/resourceId'
get:
  tags:
    - Blacklists
  summary: Retrieve a blacklist
  operationId: GetBlacklist
  description: |
    Retrieve a blacklist with specified identifier string
  responses:
    '200':
      description: Blacklist was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Blacklist'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
  x-code-samples:
    - lang: PHP
      source: |
        $blacklist = $client->blacklists()->load('blacklistId');
put:
  tags:
    - Blacklists
  summary: Create a blacklist with predefined ID
  operationId: PutBlacklist
  description: |
    Create a blacklist with predefined identifier string
  requestBody:
    $ref: '#/components/requestBodies/Blacklist'
  responses:
    '201':
      description: Blacklist was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Blacklist'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '409':
      description: Blacklist exist and cannot be updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        $blacklistForm = new Rebilly\Entities\Blacklist();
        $blacklistForm->setType($blacklistForm::TYPE_EMAIL);
        $blacklistForm->setValue('test@test.com');
        $blacklistForm->setExpiredTime('2025-01-01 05:00:00');

        try {
            $blacklist = $client->blacklists()->create($blacklistForm, 'blacklistId');
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
delete:
  tags:
    - Blacklists
  summary: Delete a blacklist
  operationId: DeleteBlacklist
  description: |
    Delete a blacklist with predefined identifier string
  responses:
    '204':
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      description: Blacklist was deleted
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
  x-code-samples:
    - lang: PHP
      source: |
        $client->blacklists()->delete('blacklistId');
