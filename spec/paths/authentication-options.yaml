get:
  tags:
    - Customer Authentication
  summary: Read current authentication options
  operationId: GetAuthenticationOption
  description: |
    Read current authentication options
  responses:
    '200':
      description: Current authentication options was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthenticationOptions'
    '401':
      $ref: '#/components/responses/AccessForbidden'
  x-code-samples:
    - lang: PHP
      source: |
        $authenticationOptions = $client->authenticationOptions()->load();
put:
  tags:
    - Customer Authentication
  summary: Change authentication options
  operationId: PutAuthenticationOption
  description: |
    Change options
  requestBody:
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/AuthenticationOptions'
    description: Authentication Options resource
    required: true
  responses:
    '200':
      description: Authentication Options were updated
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationOptions'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: >
        $authenticationOptionsForm = new
        Rebilly\Entities\AuthenticationOptions();

        // Regular expression below matches any password with 6+ length that
        contains alphabet symbols and/or numbers.

        $authenticationOptionsForm->setPasswordPattern('/^[a-zA-Z0-9]{6,}$/');


        try {
            $authenticationOptions = $client->authenticationOptions()->update($authenticationOptionsForm);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
