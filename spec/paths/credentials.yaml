get:
  tags:
    - Customer Authentication
  summary: Retrieve a list of credentials
  operationId: GetCredentialCollection
  description: |
    Retrieve a list of credentials
  parameters:
    - $ref: '#/components/parameters/collectionLimit'
    - $ref: '#/components/parameters/collectionOffset'
  responses:
    '200':
      description: A list of Credentials was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
        Pagination-Total:
          $ref: '#/components/headers/Pagination-Total'
        Pagination-Limit:
          $ref: '#/components/headers/Pagination-Limit'
        Pagination-Offset:
          $ref: '#/components/headers/Pagination-Offset'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Credential'
    '401':
      $ref: '#/components/responses/AccessForbidden'
  x-code-samples:
    - lang: PHP
      source: |
        $customerCredentials = $client->customerCredentials()->search([
            'filter' => 'customerId:testCustomer',
        ]);
post:
  tags:
    - Customer Authentication
  summary: Create a credential
  operationId: PostCredential
  description: |
    Create a credential
  requestBody:
    $ref: '#/components/requestBodies/Credential'
  responses:
    '201':
      description: Credential was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credential'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        $customerCredentialForm = new Rebilly\Entities\CustomerCredential();
        $customerCredentialForm->setCustomerId('customerId');
        $customerCredentialForm->setUsername('test');
        $customerCredentialForm->setPassword('1234');

        try {
            $customerCredential = $client->customerCredentials()->create($customerCredentialForm);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
