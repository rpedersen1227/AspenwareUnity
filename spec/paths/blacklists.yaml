get:
  tags:
    - Blacklists
  summary: Retrieve a list of blacklists
  operationId: GetBlacklistCollection
  description: |
    Retrieve a list of blacklists
  parameters:
    - $ref: '#/components/parameters/collectionLimit'
    - $ref: '#/components/parameters/collectionOffset'
  responses:
    '200':
      description: A list of Blacklists was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
        Pagination-Total:
          $ref: '#/components/headers/Pagination-Total'
        Pagination-Limit:
          $ref: '#/components/headers/Pagination-Limit'
        Pagination-Offset:
          $ref: '#/components/headers/Pagination-Offset'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Blacklist'
    '401':
      $ref: '#/components/responses/AccessForbidden'
  x-code-samples:
    - lang: PHP
      source: |
        $blacklists = $client->blacklists()->search([
            'filter' => 'value:testValue',
        ]);
post:
  tags:
    - Blacklists
  summary: Create a blacklist
  operationId: PostBlacklist
  description: |
    Create a blacklist
  requestBody:
    $ref: '#/components/requestBodies/Blacklist'
  responses:
    '201':
      description: Blacklist was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Blacklist'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        $blacklistForm = new Rebilly\Entities\Blacklist();
        $blacklistForm->setType($blacklistForm::TYPE_EMAIL);
        $blacklistForm->setValue('test@test.com');
        $blacklistForm->setExpiredTime('2025-01-01 05:00:00');

        try {
            $blacklist = $client->blacklists()->create($blacklistForm);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
