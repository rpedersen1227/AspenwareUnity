parameters:
  - $ref: '#/components/parameters/resourceId'
get:
  tags:
    - Invoices
  summary: Retrieve an invoice
  operationId: GetInvoice
  description: |
    Retrieve an invoice with specified identifier string
  parameters:
    - name: Accept
      in: header
      description: The response media type
      schema:
        type: string
        enum:
          - application/json
          - application/pdf
        default: application/json
  responses:
    '200':
      description: Invoice was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invoice'
        application/pdf:
          schema:
            $ref: '#/components/schemas/Invoice'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
  x-code-samples:
    - lang: PHP
      source: |
        $invoice = $client->invoices()->load('invoiceId');
put:
  tags:
    - Invoices
  summary: Create or update an invoice with predefined ID
  operationId: PutInvoice
  description: |
    Create or update an invoice with predefined identifier string
  requestBody:
    $ref: '#/components/requestBodies/Invoice'
  responses:
    '200':
      description: Invoice was updated
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invoice'
    '201':
      description: Invoice was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invoice'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '404':
      $ref: '#/components/responses/NotFound'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        <?
        $invoiceForm = new Rebilly\Entities\Invoice();
        $invoiceForm->setCustomerId('customerId');
        $invoiceForm->setWebsiteId('websiteId');
        $invoiceForm->setCurrency('USD');
        $invoiceForm->setBillingAddress([
            'firstName' => 'John',
            'lastName' => 'Doe',
            'organization' => 'Test LTD',
            'address' => 'Test street 5',
            'address2' => 'Test house 5',
            'city' => 'New York',
            'region' => 'Long Island',
            'country' => 'US',
            'postalCode' => '123456',
            'emails' => [
                [
                    'label' => 'main',
                    'value' => 'johndoe@testemail.com',
                    'primary' => true,
                ],
                [
                    'label' => 'secondary',
                    'value' => 'otheremail@testemail.com',
                ],
            ],
            'phoneNumbers' => [
                [
                    'label' => 'work',
                    'value' => '+123456789',
                    'primary' => true,
                ],
                [
                    'label' => 'home',
                    'value' => '+9874654321',
                ],
            ],
        ]);

        try {
            $invoice = $client->invoices()->update('invoiceId', $invoiceForm);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
