get:
  tags:
    - Invoices
  summary: Retrieve a list of invoices
  operationId: GetInvoiceCollection
  description: |
    Retrieve a list of invoices
  parameters:
    - $ref: '#/components/parameters/collectionLimit'
    - $ref: '#/components/parameters/collectionOffset'
    - name: Accept
      in: header
      description: The response media type
      schema:
        type: string
        enum:
          - application/json
          - text/csv
        default: application/json
  responses:
    '200':
      description: A list of invoices was retrieved successfully
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
        Pagination-Total:
          $ref: '#/components/headers/Pagination-Total'
        Pagination-Limit:
          $ref: '#/components/headers/Pagination-Limit'
        Pagination-Offset:
          $ref: '#/components/headers/Pagination-Offset'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Invoice'
        text/csv:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Invoice'
    '401':
      $ref: '#/components/responses/AccessForbidden'
  x-code-samples:
    - lang: PHP
      source: |
        $invoices = $client->invoices()->search([
            'filter' => 'customerId:testCustomerId',
        ]);
post:
  tags:
    - Invoices
  summary: Create an invoice
  operationId: PostInvoice
  description: |
    Create an invoice
  requestBody:
    $ref: '#/components/requestBodies/Invoice'
  responses:
    '201':
      description: Invoice was created
      headers:
        Rate-Limit-Limit:
          $ref: '#/components/headers/Rate-Limit-Limit'
        Rate-Limit-Remaining:
          $ref: '#/components/headers/Rate-Limit-Remaining'
        Rate-Limit-Reset:
          $ref: '#/components/headers/Rate-Limit-Reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invoice'
    '401':
      $ref: '#/components/responses/AccessForbidden'
    '422':
      $ref: '#/components/responses/InvalidDataError'
  x-code-samples:
    - lang: PHP
      source: |
        <?
        $invoiceForm = new Rebilly\Entities\Invoice();
        $invoiceForm->setCustomerId('customerId');
        $invoiceForm->setWebsiteId('websiteId');
        $invoiceForm->setCurrency('USD');
        $invoiceForm->setBillingAddress([
            'firstName' => 'John',
            'lastName' => 'Doe',
            'organization' => 'Test LTD',
            'address' => 'Test street 5',
            'address2' => 'Test house 5',
            'city' => 'New York',
            'region' => 'Long Island',
            'country' => 'US',
            'postalCode' => '123456',
            'emails' => [
                [
                    'label' => 'main',
                    'value' => 'johndoe@testemail.com',
                    'primary' => true,
                ],
                [
                    'label' => 'secondary',
                    'value' => 'otheremail@testemail.com',
                ],
            ],
            'phoneNumbers' => [
                [
                    'label' => 'work',
                    'value' => '+123456789',
                    'primary' => true,
                ],
                [
                    'label' => 'home',
                    'value' => '+9874654321',
                ],
            ],
        ]);

        try {
            $invoice = $client->invoices()->create($invoiceForm);
        } catch (UnprocessableEntityException $e) {
            echo $e->getMessage();
        }
