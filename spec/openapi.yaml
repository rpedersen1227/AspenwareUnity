openapi: 3.0.0
info:
  title: Unity API 4.0
  description: The Unity eCommerce API.<br/><br/>Use the <strong>'Authorize'</strong>
    button to gain access to any API methods that require authorization.<br/><br/>hello world
  version: "4.0"

servers:
- url: /
paths:
  /api/Access/access-history-by-location/{nodeId}:
    get:
      tags:
      - Access
      summary: Gets the user's lift rides for all time
      operationId: AccessHistoryByLocation
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessHistoryByLocationResponse'
        "401":
          description: Unauthorized
  /api/Access/access-history-by-location-for-current-season/{nodeId}:
    get:
      tags:
      - Access
      summary: Gets the user's total rides this season by Lift
      operationId: AccessHistoryByLocationForCurrentSeason
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessHistoryByLocationForCurrentSeasonResponse'
        "401":
          description: Unauthorized
  /api/Access/accesssummary:
    post:
      tags:
      - Access
      operationId: AccessSummary
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessSummaryRequest'
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
  /api/Access/checkin:
    post:
      tags:
      - Access
      operationId: Checkin
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessEndPointCheckinRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessEndPointCheckinResponse'
        "401":
          description: Unauthorized
  /api/Access/current-days-rank/{nodeId}:
    get:
      tags:
      - Access
      summary: Gets the user's current days rank.
      operationId: CurrentDaysRank
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CurrentDaysRankResponse'
        "401":
          description: Unauthorized
  /api/Access/current-tram-rank/{nodeId}:
    get:
      tags:
      - Access
      summary: Gets the user's current tram rank.
      operationId: CurrentTramRank
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CurrentTramRankResponse'
        "401":
          description: Unauthorized
  /api/Access/daily-access-history-by-location/{nodeId}:
    get:
      tags:
      - Access
      summary: Gets the user's total rides this season by lift and date
      operationId: DailyAccessHistoryByLocation
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DailyAccessHistoryByLocationResponse'
        "401":
          description: Unauthorized
  /api/Access/daily-first-access-by-location/{nodeId}:
    get:
      tags:
      - Access
      summary: Gets the user's indivdual Days and First Rides This Season
      operationId: DailyFirstAccessByLocation
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DailyFirstAccessByLocationResponse'
        "401":
          description: Unauthorized
  /api/Access/force-days:
    get:
      tags:
      - Access
      summary: Gets force days history for Access / Entitlement
      operationId: GetAccessForceDays
      parameters:
      - name: entitlementId
        in: query
        description: Entitlement Identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accessProductTypeCode
        in: query
        description: Access Product type code
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/AccessForceDays'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
    post:
      tags:
      - Access
      summary: Adds force days to Access / Entitlement
      operationId: AddAccessForceDays
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: AccessForceDays object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessForceDays'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Access/history/{infoSourceType}/{recId}/{location}:
    get:
      tags:
      - Access
      summary: Gets the access history.
      operationId: AccessHistory
      parameters:
      - name: infoSourceType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - None
          - Master
          - External
      - name: recId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: location
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessHistoryResponse'
        "401":
          description: Unauthorized
  /api/Access/hotlistlist:
    get:
      tags:
      - Access
      operationId: AccessHotlistList
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
  /api/Access/individualscanhistory:
    post:
      tags:
      - Access
      operationId: IndividualScanHistory
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessIndividualScanHistoryRequest'
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
  /api/Access/is-season-pass-holder/{nodeId}:
    get:
      tags:
      - Access
      summary: Gets a bool indicating if the user is a current season pass holder
      operationId: IsSeasonPassHolder
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IsSeasonPassHolderResponse'
        "401":
          description: Unauthorized
  /api/Access/locations:
    get:
      tags:
      - Access
      operationId: AccessLocations
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
  /api/Access/mediaaccesshotlist:
    post:
      tags:
      - Access
      operationId: MediaAccessHotlist
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaHotlistRequest'
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
  /api/Access/mobilecheckin:
    post:
      tags:
      - Access
      operationId: MobileCheckin
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileAccessCheckinRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileAccessCheckinResponse'
        "401":
          description: Unauthorized
  /api/Access/passmediaprofiles/{recId}:
    get:
      tags:
      - Access
      operationId: PassMediaProfiles
      parameters:
      - name: recId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: passMediaCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
  /api/Access/passmediaprofilestatus:
    post:
      tags:
      - Access
      operationId: PassMediaProfileStatus
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateInactivatePassMediaProfileRequest'
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
  /api/Access/prepaidaccesshistory/{infoSourceType}/{recId}:
    get:
      tags:
      - Access
      operationId: PrepaidAccessHistory
      parameters:
      - name: infoSourceType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - None
          - Master
          - External
      - name: recId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PrepaidAccessProfileResponse'
        "401":
          description: Unauthorized
  /api/Access/process:
    post:
      tags:
      - Access
      operationId: ProcessAccess
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessAccessRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessAccessResponse'
        "401":
          description: Unauthorized
  /api/Access/total-days-by-season/{nodeId}:
    get:
      tags:
      - Access
      summary: Gets the user's total days by season.
      operationId: TotalDaysBySeason
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TotalDaysBySeasonResponse'
        "401":
          description: Unauthorized
  /api/Access/total-days-for-current-season/{nodeId}:
    get:
      tags:
      - Access
      summary: Gets the user's total days for the current season
      operationId: TotalDaysForCurrentSeason
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TotalDaysForCurrentSeasonResponse'
        "401":
          description: Unauthorized
  /api/Account/authenticate:
    post:
      tags:
      - Account
      operationId: Authenticate
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        $ref: '#/components/requestBodies/Login'
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
  /api/Account/authidexists:
    get:
      tags:
      - Account
      operationId: CheckAuthIdExists2
      parameters:
      - name: authId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
        "401":
          description: Unauthorized
  /api/Account/authipcodeexists:
    get:
      tags:
      - Account
      operationId: CheckAuthExistsByIpCode
      parameters:
      - name: ipCode
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
        "401":
          description: Unauthorized
  /api/Account/emailexists:
    get:
      tags:
      - Account
      operationId: CheckEmailExists
      parameters:
      - name: email
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
  /api/Account/mediaexists:
    get:
      tags:
      - Account
      operationId: CheckMediaExists
      parameters:
      - name: id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
  /api/Activity/checklock/{lockId}:
    get:
      tags:
      - Activity
      operationId: CheckLock
      parameters:
      - name: lockId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: storeTimeZoneId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeBasedActivityCheckLockResponse'
        "401":
          description: Unauthorized
  /api/Activity/releaselock:
    post:
      tags:
      - Activity
      operationId: ReleaseLock
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseLockRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeBasedActivityReleaseLockResponse'
        "401":
          description: Unauthorized
  /api/Activity/requestlock:
    post:
      tags:
      - Activity
      operationId: RequestLock
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeBasedActivityAddLockRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeBasedActivityAddLockResponse'
        "401":
          description: Unauthorized
  /api/Activity/slots:
    post:
      tags:
      - Activity
      operationId: GetTimeBasedActivitySlots
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeBasedActivityRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeBasedActivityResponse'
        "401":
          description: Unauthorized
  /api/Contact/search:
    post:
      tags:
      - Contact
      summary: Custom search used for Self Reg Kiosk
      operationId: Search
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomSearchContactsRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomSearchContactsResponse'
        "401":
          description: Unauthorized
  /api/Contacts:
    post:
      tags:
      - Contacts
      summary: Creates a new Contact
      operationId: CreateContact
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}:
    get:
      tags:
      - Contacts
      summary: Gets a Contact by Identifier
      operationId: GetContact
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
    put:
      tags:
      - Contacts
      summary: Updates a Contact
      operationId: UpdateContact
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}/addresses:
    put:
      tags:
      - Contacts
      summary: Updates a Contact's Address
      operationId: UpdateAddress
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: The Contact's Address
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseAddress'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}/check:
    get:
      tags:
      - Contacts
      summary: Checks whether Contact exists by Identifier
      operationId: CheckContact
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Contacts/{nodeId}/child-registrations:
    put:
      tags:
      - Contacts
      summary: Updates the Contact's child registration information
      operationId: UpdateChildRegistration
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}/dependents:
    post:
      tags:
      - Contacts
      summary: Adds a dependent to a Contact
      operationId: AddContactDependent
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: The dependent as a Contact object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}/emails:
    put:
      tags:
      - Contacts
      summary: Updates a Contact's Email
      operationId: UpdateEmail
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: The Contact's Email
        content:
          application/json:
            schema:
              type: string
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}/entitlements:
    post:
      tags:
      - Contacts
      summary: Gets the Contact's Entitlements
      operationId: GetContactEntitlements
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: GetEntitlementsRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEntitlementsRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/Entitlement'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Contacts/{nodeId}/external:
    put:
      tags:
      - Contacts
      summary: Links Contact's master Id to external Id
      operationId: SetExternalId
      parameters:
      - name: nodeId
        in: path
        description: The Contact's master Id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: The Contact's external Id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identifier'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}/household-waivers:
    get:
      tags:
      - Contacts
      summary: Gets all waivers for a household
      operationId: GetHouseholdWaivers
      parameters:
      - name: nodeId
        in: path
        description: A Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetHouseholdWaiversResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Contacts/{nodeId}/household-waivers/check:
    get:
      tags:
      - Contacts
      summary: Gets Waivers for a Household
      operationId: CheckHouseholdWaivers
      parameters:
      - name: nodeId
        in: path
        description: A Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CheckHouseholdWaiverResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Contacts/{nodeId}/identifications:
    get:
      tags:
      - Contacts
      summary: Gets contact identification
      operationId: GetContactIdentifications
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/Identification'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Contacts/{nodeId}/media:
    put:
      tags:
      - Contacts
      summary: Links Media Identifier to Contact
      operationId: SetMediaId
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: The Media Identifier
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssignMediaResponse'
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}/merged-record:
    get:
      tags:
      - Contacts
      summary: Checks whether Contact exists by Identifier
      operationId: MergedRecord
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Contacts/{nodeId}/phones:
    put:
      tags:
      - Contacts
      summary: Updates a Contact's Phone
      operationId: UpdatePhone
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: The Contact's Phone
        content:
          application/json:
            schema:
              type: string
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}/photos:
    put:
      tags:
      - Contacts
      summary: Creates or Updates a Contact's photo
      operationId: UpdatePhoto
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: UpdateContactPhoto UnityAPI.Models.Identifier object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactPhoto'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}/profiles:
    put:
      tags:
      - Contacts
      summary: Updates a Contact's Profile (first/last name, dob, gender)
      operationId: UpdatePersonProfile
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        $ref: '#/components/requestBodies/Contact'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}/ski-rental-profiles:
    get:
      tags:
      - Contacts
      summary: Gets Contact's ski rental profile
      operationId: GetContactSkiRentalProfile
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RentalProfile'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
    put:
      tags:
      - Contacts
      summary: Creates or updates ski rental profile for Contact
      operationId: SaveSkiRentalProfile
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: SaveRentalProfileRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveRentalProfileRequest'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Contacts/{nodeId}/stores/{store}:
    get:
      tags:
      - Contacts
      summary: Gets a Contact and Products at the Store
      operationId: GetContactWithProducts
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: store
        in: path
        description: The Store
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Contacts/{nodeId}/stores/{store}/products:
    get:
      tags:
      - Contacts
      summary: Gets the available Products for a Contact that can be reloaded, for
        a given store
      operationId: GetContactProducts
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: store
        in: path
        description: The Store
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Contacts/{nodeId}/terminal/{terminalNodeId}/skirentalform/damagewaiverselected/{damageWaiverSelected}:
    get:
      tags:
      - Contacts
      summary: Gets ski rental form for Contact
      operationId: GetSkiRentalForm
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: terminalNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: damageWaiverSelected
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: boolean
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RentalFormResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Contacts/{nodeId}/waivers:
    post:
      tags:
      - Contacts
      summary: Adds Waiver for Contact
      operationId: UpdateLiabilityReleaseSignature
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: SignLiabilityReleaseRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignLiabilityReleaseRequest'
      responses:
        "201":
          description: Success
        "401":
          description: Unauthorized
  /api/Contacts/find:
    post:
      tags:
      - Contacts
      summary: "TODO: discuss Find vs Search w/ Rich (legacy route for Alterra)\r\n\
        Finds an existing Contact based on matching passed in criteria"
      operationId: FindContact
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: FindContactRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindContactRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
  /api/Contacts/find/identification:
    post:
      tags:
      - Contacts
      summary: Finds an existing Contact based on Identification, ex. media, chip,
        etc
      operationId: GetContactByIdentification
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: The Contact's Identification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identification'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Contacts/search:
    post:
      tags:
      - Contacts
      summary: Searches Contacts
      operationId: SearchContacts
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: SearchContactsRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchContactsRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchContactsResponse'
        "401":
          description: Unauthorized
  /api/Contacts/ski-rental-form-data:
    post:
      tags:
      - Contacts
      summary: Gets ski rental form data for Contact
      operationId: GetSkiRentalFormData
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: SelfRegistrationCompleteRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfRegistrationCompleteRequest'
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/SelfRegistrationCompleteResponse'
        "401":
          description: Unauthorized
  /api/Contacts/vouchers:
    post:
      tags:
      - Contacts
      summary: Gets Vouchers for list of Contacts
      operationId: GetContactsVouchers
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: List of Contact Identifiers
        content:
          application/json:
            schema:
              uniqueItems: false
              type: array
              items:
                $ref: '#/components/schemas/Identifier'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/Voucher'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Contacts/waivers/{waiverNodeId}:
    get:
      tags:
      - Contacts
      summary: "Gets the Waiver metadata\r\nTODO move to api/waivers ???"
      operationId: LiabilityRelease
      parameters:
      - name: waiverNodeId
        in: path
        description: The Waiver's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiabilityReleaseResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Customers:
    post:
      tags:
      - Customers
      summary: Creates a new Customer
      operationId: CreateCustomer
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        $ref: '#/components/requestBodies/Customer'
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
  /api/Customers/{nodeId}:
    get:
      tags:
      - Customers
      summary: Gets a Customer by Identifier
      operationId: GetCustomer
      parameters:
      - name: nodeId
        in: path
        description: The Customer's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: store
        in: query
        description: The Store, ex. Aspenware
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
    put:
      tags:
      - Customers
      summary: Updates a Customer
      operationId: UpdateCustomer
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        $ref: '#/components/requestBodies/Customer'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Customers/{nodeId}/addresses/billing:
    put:
      tags:
      - Customers
      summary: Creates or Updates a Customer's billing address
      operationId: UpdateCustomerBillingAddress
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: A UpdateCustomerBillingAddress object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerBillingAddress'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
  /api/Customers/{nodeId}/addresses/shipping:
    put:
      tags:
      - Customers
      summary: Creates or Updates a Customer's shipping address
      operationId: UpdateCustomerShippingAddress
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: A UpdateCustomerShippingAddress object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerShippingAddress'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
  /api/Customers/{nodeId}/creditcard/waivers:
    put:
      tags:
      - Customers
      summary: Creates or Updates a Customer's credit card waiver
      operationId: UpdateCreditCardWaiver
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: A UpdateResortChargeWaiverRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveCreditCardRequest'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Customers/{nodeId}/credit-cards/primary:
    get:
      tags:
      - Customers
      summary: Gets a Customer's primary credit card
      operationId: GetPrimaryCreditCardSummary
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCreditCardSummary'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Customers/{nodeId}/loyalty-award/{loyaltyAwardNodeId}/loyalty-award-vouchers:
    get:
      tags:
      - Customers
      summary: Gets a Customer's loyalty award vouchers
      operationId: GetLoyaltyAwardVoucher
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: loyaltyAwardNodeId
        in: path
        description: The loyalty award Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateLoyaltyAwardResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Customers/{nodeId}/loyalty-points:
    get:
      tags:
      - Customers
      summary: Gets a Customer's loyalty points.
      operationId: GetLoyaltyPoints
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoyaltyPointsResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Customers/{nodeId}/loyalty-points/detail:
    get:
      tags:
      - Customers
      summary: Gets a Customer's loyalty point details
      operationId: GetLoyaltyPointsDetail
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLoyaltyPointsDetailResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Customers/{nodeId}/resort-charges:
    put:
      tags:
      - Customers
      summary: "Creates or Updates a Customer's resort charge (authorization and credit\
        \ card)\r\nNote: v1 method to support Alterra integration.  Needs refactoring\
        \ w/ eComm implementation."
      operationId: UpdateResortCharge
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: A UpdateResortChargeRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResortChargeRequest'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Customers/{nodeId}/resort-charges/waivers:
    put:
      tags:
      - Customers
      summary: Creates or Updates a Customer's resort charge waiver
      operationId: UpdateResortChargeWaiver
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: A UpdateResortChargeWaiverRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResortChargeWaiverRequest'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
    delete:
      tags:
      - Customers
      summary: Delete's a Customer's resort charge waiver
      operationId: RemoveResortChargeWaiver
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Customers/{nodeId}/stored-value:
    get:
      tags:
      - Customers
      summary: Gets a Customer's stored value
      operationId: GetStoredValueForCustomer
      parameters:
      - name: nodeId
        in: path
        description: The Customer Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStoredValueForCustomerResponse'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Customers/discounts/{mediaId}:
    get:
      tags:
      - Customers
      summary: "Gets a Customer's discounts\r\nTODO reevaluate route"
      operationId: GetDiscounts
      parameters:
      - name: mediaId
        in: path
        description: A chip or media id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountProfile'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Customers/search:
    get:
      tags:
      - Customers
      summary: Searches for a Customer
      description: "Search by one or more of the following values:\r\n<para>\r\nUserName\r\
        \nFirstName\r\nLastName\r\nEmail\r\n</para>"
      operationId: SearchCustomers
      parameters:
      - name: UserName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: FirstName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: LastName
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Email
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Phone
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EntitlementNodeId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: EntitlementType
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Query
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Entitlement/cancel:
    post:
      tags:
      - Entitlement
      operationId: CancelEntitlement
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelEntitlementRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelEntitlementResponse'
        "401":
          description: Unauthorized
  /api/Entitlement/contacts/{liftAccessLocationCode}/{skiSchoolAccessProductTypeCode}/{skiSchoolAccessLocationCode}:
    get:
      tags:
      - Entitlement
      operationId: EntitlementLookup
      parameters:
      - name: contactIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: false
          type: array
          items:
            type: string
      - name: liftAccessLocationCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: skiSchoolAccessProductTypeCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: skiSchoolAccessLocationCode
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/EntitlementLookupResponse'
        "401":
          description: Unauthorized
  /api/Entitlement/export:
    post:
      tags:
      - Entitlement
      summary: Download active entitlements
      operationId: DownloadActiveEntitlements
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
  /api/Entitlement/fulfill:
    post:
      tags:
      - Entitlement
      operationId: FulfillEntitlementsAsync
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillEntitlementRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillEntitlementResponse'
        "401":
          description: Unauthorized
  /api/Entitlement/media/changes:
    get:
      tags:
      - Entitlement
      summary: Get a list of pass media statuses
      operationId: EntitlementChanges
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/MediaPassAccess'
        "401":
          description: Unauthorized
  /api/Entitlement/usage:
    put:
      tags:
      - Entitlement
      summary: UpdateEntitlementUsage
      operationId: UpdateEntitlementUsage
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntitlementUsageRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEntitlementUsageResponse'
        "401":
          description: Unauthorized
  /api/Entitlement/usagebydateandid:
    post:
      tags:
      - Entitlement
      operationId: GetEntitlementUsageByDateAndId
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEntitlementUsageRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntitlementUsageResponse'
        "401":
          description: Unauthorized
  /api/Entitlements:
    put:
      tags:
      - Entitlements
      summary: "Creates or Updates a list of Entitlements for a Contact\r\nMay also\
        \ link Media to Entitlements"
      operationId: UpdateEntitlements
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: An UpdateEntitlementsRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntitlementsRequest'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
    post:
      tags:
      - Entitlements
      summary: Generates an Access Code based on Entitlement Type and links to Media
        to enable "direct to lift" access
      operationId: CreateEntitlementWithIdentificationNoContact
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: A CreateEntitlementWithIdentificationNoContactRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEntitlementWithIdentificationNoContactRequest'
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEntitlementWithIdentificationNoContactResponse'
        "401":
          description: Unauthorized
  /api/Entitlements/{nodeId}:
    get:
      tags:
      - Entitlements
      summary: Gets Entitlement by Identifier
      operationId: GetEntitlement
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntitlementResponse'
        "401":
          description: Unauthorized
    post:
      tags:
      - Entitlements
      summary: Updates an Entitlement
      operationId: UpdateEntitlement
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entitlement'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entitlement'
        "401":
          description: Unauthorized
  /api/Entitlements/{nodeId}/check:
    post:
      tags:
      - Entitlements
      summary: Checks whether Entitlement exists by Identifier
      operationId: CheckEntitlementExists
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
  /api/Entitlements/{nodeId}/note/{noteNodeId}:
    get:
      tags:
      - Entitlements
      operationId: GetEntitlementNote
      parameters:
      - name: nodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: noteNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementNoteResponse'
        "401":
          description: Unauthorized
  /api/Entitlements/giftcard/{giftCardNodeId}/check:
    get:
      tags:
      - Entitlements
      operationId: CheckGiftCard
      parameters:
      - name: giftCardNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateAdditionalPaymentResponse'
        "401":
          description: Unauthorized
  /api/Entitlements/identifiers/find:
    post:
      tags:
      - Entitlements
      summary: Finds Entitlement's external to master Identifier mapping
      operationId: FindEntitlementIdentifierMapping
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: An Entitlement object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entitlement'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Entitlements/orderitem/{orderItemNodeId}/product/{productNodeId}/locker:
    get:
      tags:
      - Entitlements
      summary: Get locker rental info
      operationId: GetEntitlementLockerRentalInfo
      parameters:
      - name: orderItemNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: productNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/UnityPrompt'
        "401":
          description: Unauthorized
  /api/Entitlements/search/media/{mediaNodeId}/location/{locationNodeId}/device/{deviceNodeId}:
    get:
      tags:
      - Entitlements
      operationId: RfidEntitlements
      parameters:
      - name: mediaNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: locationNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: deviceNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: ""
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MediaEntitlementResponse'
        "401":
          description: Unauthorized
  /api/Entitlements/search/product/{productNodeId}:
    post:
      tags:
      - Entitlements
      summary: Get Entitlement by Product
      operationId: GetEntitlementsByProduct
      parameters:
      - name: productNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEntitlementsByProductRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntitlementsByProductResponse'
        "401":
          description: Unauthorized
  /api/Entitlements/status:
    put:
      tags:
      - Entitlements
      summary: "Updates the Status for a list of Entitlements\r\nEx. Active, Returned,\
        \ Expired, NoWaiver, Hotlist"
      operationId: UpdateEntitlementsEntitlementStatus
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: An UpdateEntitlementsEntitlementStatusRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntitlementsEntitlementStatusRequest'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Entitlements/usages/search:
    post:
      tags:
      - Entitlements
      summary: Search Entitlement Usages
      operationId: GetEntitlementUsageByDate
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: A GetEntitlementUsageRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEntitlementUsageRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/UsageDetail'
        "401":
          description: Unauthorized
  /api/Entitlements/uses:
    put:
      tags:
      - Entitlements
      summary: Records an Entitlement Use
      operationId: UpdateEntitlementUse
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: An UpdateEntitlementUseRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntitlementUseRequest'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Entitlements/voucher/{voucherNodeId}/amount/{amount}:
    post:
      tags:
      - Entitlements
      summary: Update voucher amount
      operationId: UpdateVoucherAmount
      parameters:
      - name: voucherNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: amount
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: double
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        "401":
          description: Unauthorized
  /api/Entitlements/voucher/{voucherNodeId}/reportCodeCheck/{reportCodeCheck}:
    get:
      tags:
      - Entitlements
      summary: Get voucher
      operationId: GetVoucher
      parameters:
      - name: voucherNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reportCodeCheck
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: boolean
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voucher'
        "401":
          description: Unauthorized
  /api/Identity:
    get:
      tags:
      - Identity
      operationId: Get
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
  /api/Itinerary:
    post:
      tags:
      - Itinerary
      summary: Create a new itinerary.
      operationId: CreateItinerary
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Itinerary'
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
  /api/Itinerary/{nodeId}:
    get:
      tags:
      - Itinerary
      summary: Gets a Itinerary by Identifier
      operationId: GetItinerary
      parameters:
      - name: nodeId
        in: path
        description: The Itinerary's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Loyalty/contacts/{nodeId}/award-events:
    get:
      tags:
      - Loyalty
      summary: Gets an list of loyalty award events for a user
      operationId: GetLoyaltyAwardEvents
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: loyaltyProgramCode
        in: query
        description: The loyalty program code
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: statusCode
        in: query
        description: The loyalty program status code
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  $ref: '#/components/schemas/LoyaltyAwardEvent'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Loyalty/contacts/{nodeId}/overview:
    get:
      tags:
      - Loyalty
      summary: Gets an overview of the loyalty information for a given contact
      operationId: GetLoyaltyOverview
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: passMediaTypeCode
        in: query
        description: The pass media type code
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: loyaltyProgramCode
        in: query
        description: The loyalty program code
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: loyaltyProgramStatusCode
        in: query
        description: The loyalty program status code
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyOverview'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /api/Loyalty/contacts/{nodeId}/redeem-award-points:
    put:
      tags:
      - Loyalty
      summary: Redeems loyalty points for loyalty award/voucher.
      operationId: RedeemAwardPoints
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: loyaltyAwardCode
        in: query
        description: The loyalty award code
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: loyaltyProgramCode
        in: query
        description: The loyalty program code
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedeemAwardPointsResponse'
        "401":
          description: Unauthorized
  /api/Loyalty/contacts/{nodeId}/redeem-points-to-gift-card:
    put:
      tags:
      - Loyalty
      summary: Redeems loyalty award points for a digital gift card
      operationId: RedeemPointsToGiftCard
      parameters:
      - name: nodeId
        in: path
        description: The Contact's Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dollarAmount
        in: query
        description: The amount to load onto the gift card.
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: loyaltyProgramCode
        in: query
        description: The loyalty program code
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: loyaltyPaymentMethodCode
        in: query
        description: The loyalty payment method code
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
  /api/Loyalty/enroll:
    post:
      tags:
      - Loyalty
      summary: Enrolls guest in loyalty program.
      operationId: Enrollment
      parameters:
      - name: nodeId
        in: query
        description: The Contact's Identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: productHeaderCode
        in: query
        description: 'Product header code for loyalty program, ex: LOYAL'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clientCode
        in: query
        description: The client code.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: confirmationNumber
        in: query
        description: Confirmation number for enrollment transaction.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillEntitlementResponse'
        "401":
          description: Unauthorized
  /api/Media:
    get:
      tags:
      - Media
      operationId: TestErrorLogging
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckContactExistsResponse'
        "401":
          description: Unauthorized
    put:
      tags:
      - Media
      summary: Creates or Updates Media
      operationId: UpdateMedia
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: An UpdateMediaRequest object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMediaRequest'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Media/identifications:
    put:
      tags:
      - Media
      summary: Updates media identification (mapping from ChipId to MediaId/Barcode/PassMediaCode)
      operationId: UpdateMediaIdentification
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMediaIdentificationRequest'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Media/identifications/{nodeId}:
    put:
      tags:
      - Media
      summary: Updates media identification (mapping from ChipId to MediaId/Barcode/PassMediaCode)
      operationId: UpdateMediaIdentification2
      parameters:
      - name: nodeId
        in: path
        description: Master Chip
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: An Identification object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identification'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
    delete:
      tags:
      - Media
      summary: Delete media identification (mapping from ChipId to MediaId/Barcode/PassMediaCode)
      operationId: DeleteMediaIdentification
      parameters:
      - name: nodeId
        in: path
        description: A master ChipId
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Media/identifications/exists:
    post:
      tags:
      - Media
      summary: Checks whether media identification (mapping from ChipId to MediaId/Barcode/PassMediaCode)
        exists
      operationId: CheckMediaIdentificationExists
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckMediaIdentificationExistsRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckMediaIdentificationExistsResponse'
        "401":
          description: Unauthorized
  /api/NodeId:
    post:
      tags:
      - NodeId
      operationId: Post
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Identifier'
      responses:
        "200":
          description: Success
  /api/Order:
    post:
      tags:
      - Order
      summary: Create a new order.
      operationId: CreateOrder
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        $ref: '#/components/requestBodies/Order'
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
  /api/Order/{infoSourceType}/{recId}:
    get:
      tags:
      - Order
      operationId: GetOrder
      parameters:
      - name: infoSourceType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - None
          - Master
          - External
      - name: recId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: store
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "401":
          description: Unauthorized
  /api/Order/{orderNodeId}/entitlements:
    post:
      tags:
      - Order
      operationId: GetOrderEntitlements
      parameters:
      - name: orderNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderEntitlementsRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderEntitlementsResponse'
        "401":
          description: Unauthorized
  /api/Order/{orderNodeId}/status:
    get:
      tags:
      - Order
      operationId: GetOrderStatus
      parameters:
      - name: orderNodeId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
        "401":
          description: Unauthorized
  /api/Order/addordertransactionforpaymentanddeposit:
    post:
      tags:
      - Order
      operationId: AddOrderTransactionForPaymentAndDeposit
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrderTransactionForPaymentAndDepositRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrderTransactionForPaymentAndDepositResponse'
        "401":
          description: Unauthorized
  /api/Order/fulfillorder:
    post:
      tags:
      - Order
      operationId: FulfillOrder
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        $ref: '#/components/requestBodies/Order'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillOrderResponse'
        "401":
          description: Unauthorized
  /api/Order/islocked/{externalOrderId}/{externalOrderLine}:
    get:
      tags:
      - Order
      operationId: IsOrderLocked
      parameters:
      - name: externalOrderId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: externalOrderLine
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsOrderLockedResponse'
        "401":
          description: Unauthorized
  /api/Order/isorderlineopen/{externalOrderId}/{externalOrderLine}:
    get:
      tags:
      - Order
      operationId: IsOrderLineOpen
      parameters:
      - name: externalOrderId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: externalOrderLine
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IsOrderLineOpenResponse'
        "401":
          description: Unauthorized
  /api/Order/metadata/{externalOrderId}/{externalOrderLine}:
    get:
      tags:
      - Order
      operationId: GetOrderMetadata
      parameters:
      - name: externalOrderId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: externalOrderLine
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderMetadataResponse'
        "401":
          description: Unauthorized
  /api/Order/old-orders-in-day:
    get:
      tags:
      - Order
      operationId: OldGetOrdersInDay
      parameters:
      - name: nodeIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: false
          type: array
          items:
            type: string
      - name: date
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInDayResponse'
        "401":
          description: Unauthorized
  /api/Order/old-orders-in-month:
    get:
      tags:
      - Order
      operationId: OldGetOrdersInMonth
      parameters:
      - name: nodeIds
        in: query
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: false
          type: array
          items:
            type: string
      - name: date
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInMonthResponse'
        "401":
          description: Unauthorized
  /api/Order/orders-in-day:
    get:
      tags:
      - Order
      summary: Get a list of orders that the user placed for a given date
      operationId: GetOrdersInDay
      parameters:
      - name: nodeId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The date to return orders for
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInDayResponse'
        "401":
          description: Unauthorized
  /api/Order/orders-in-month:
    get:
      tags:
      - Order
      summary: Get a list of orders that the user placed in a given month
      operationId: GetOrdersInMonth
      parameters:
      - name: nodeId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: date
        in: query
        description: The date of the month to return orders for
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersInDayResponse'
        "401":
          description: Unauthorized
  /api/Order/validate:
    post:
      tags:
      - Order
      summary: Use this to check an order for validity prior to collecting and applying
        payment information and creating the order.
      operationId: Validate
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        description: The order to validate.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        "401":
          description: Unauthorized
  /api/Product/checkinventory:
    post:
      tags:
      - Product
      operationId: GetInventoryForCart
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckInventoryRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckInventoryResponse'
        "401":
          description: Unauthorized
  /api/Product/getinventoryformonth:
    post:
      tags:
      - Product
      operationId: GetInventoryForMonth
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInventoryForMonthRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInventoryForMonthResponse'
        "401":
          description: Unauthorized
  /api/Product/lineofbusiness:
    post:
      tags:
      - Product
      operationId: GetLineOfBusiness
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLOBRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLOBResponse'
        "401":
          description: Unauthorized
  /api/Product/lockproductinventoryitem:
    post:
      tags:
      - Product
      operationId: LockProductInventoryItem
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockProductInventoryItemRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockProductInventoryItemResponse'
        "401":
          description: Unauthorized
  /api/Product/lockproductinventoryitems:
    post:
      tags:
      - Product
      operationId: LockProductInventoryItems
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockProductInventoryItemsRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockProductInventoryItemsResponse'
        "401":
          description: Unauthorized
  /api/Product/productattributetype:
    post:
      tags:
      - Product
      operationId: GetProductAttributeType
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProductAttributeTypeRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductAttributeTypeResponse'
        "401":
          description: Unauthorized
  /api/Product/productfamiliesbycatalog:
    post:
      tags:
      - Product
      operationId: GetProductFamiliesByCatalog
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProductFamiliesByCatalogRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductFamiliesByCatalogResponse'
        "401":
          description: Unauthorized
  /api/Product/productfamiliesbylob:
    post:
      tags:
      - Product
      operationId: GetProductFamiliesByLob
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProductFamiliesByLOBRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductFamiliesByLOBResponse'
        "401":
          description: Unauthorized
  /api/Product/productfamily:
    post:
      tags:
      - Product
      operationId: GetProductFamily
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProductFamilyRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductFamilyResponse'
        "401":
          description: Unauthorized
  /api/Product/productinventory:
    post:
      tags:
      - Product
      operationId: GetProductInventory
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProductInventoryRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductInventoryResponse'
        "401":
          description: Unauthorized
  /api/Product/productsbyproductfamily:
    post:
      tags:
      - Product
      operationId: GetProductsByProductFamily
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProductsByProductFamilyRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsByProductFamilyResponse'
        "401":
          description: Unauthorized
  /api/Product/productsync:
    post:
      tags:
      - Product
      operationId: GetInventoryForNopSync
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSyncRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSyncResponse'
        "401":
          description: Unauthorized
  /api/Product/resources:
    post:
      tags:
      - Product
      operationId: GetProductResources
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductResourceRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResourceResponse'
        "401":
          description: Unauthorized
  /api/Product/syncproductinventoryitem:
    post:
      tags:
      - Product
      operationId: SyncProductInventory
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncProductInventoryRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncProductInventoryResponse'
        "401":
          description: Unauthorized
  /api/Product/validateinventoryitems:
    post:
      tags:
      - Product
      summary: Use to validate that a list of inventory items is available.
      operationId: ValidateInventoryItems
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateInventoryItemsRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateInventoryItemsResponse'
        "401":
          description: Unauthorized
  /api/User/authenticate:
    post:
      tags:
      - User
      operationId: Authenticate2
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        $ref: '#/components/requestBodies/Login'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        "401":
          description: Unauthorized
  /api/User/checkid:
    post:
      tags:
      - User
      operationId: CheckId
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckId'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
        "401":
          description: Unauthorized
  /api/User/checkmediaserialnumber:
    post:
      tags:
      - User
      operationId: CheckMediaSerialNumber
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckMediaSerialNumber'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
        "401":
          description: Unauthorized
  /api/User/checknameemail:
    post:
      tags:
      - User
      operationId: CheckNameEmail
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAndEmail'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
        "401":
          description: Unauthorized
  /api/User/checknamepostalcodedob:
    post:
      tags:
      - User
      operationId: CheckNamePostalCodeDOB
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNamePostalCodeDOB'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
        "401":
          description: Unauthorized
  /api/User/checkpassnumber:
    post:
      tags:
      - User
      operationId: CheckPassNumber
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPassNumberRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
        "401":
          description: Unauthorized
  /api/User/checkusername:
    post:
      tags:
      - User
      operationId: CheckUsername
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckUsername'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
        "401":
          description: Unauthorized
  /api/User/findusernamebyemail:
    post:
      tags:
      - User
      operationId: FindUserNameByEmail
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindUserNameByEmailRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                uniqueItems: false
                type: array
                items:
                  type: string
        "401":
          description: Unauthorized
  /api/User/updateusername:
    post:
      tags:
      - User
      operationId: UpdateUsername
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerUserAccount'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerUserAccountResponse'
        "401":
          description: Unauthorized
  /api/Users:
    get:
      tags:
      - Users
      summary: Find a UnityAPI.Models.User based on the supplied query string values.
      operationId: GetUsers2
      parameters:
      - name: nodeId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: username
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: Unauthorized
    post:
      tags:
      - Users
      summary: Create a new User.
      operationId: UpdateUsers2
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        "401":
          description: Unauthorized
  /api/Users/password:
    put:
      tags:
      - Users
      summary: Change the user's password
      operationId: ChangePassword
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
      responses:
        "204":
          description: Success
        "401":
          description: Unauthorized
  /api/Verification/validateprompt:
    post:
      tags:
      - Verification
      operationId: ValidatePrompt
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidatePromptsRequest'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatePromptsResponse'
        "401":
          description: Unauthorized
  /api/Worker/changepassword:
    post:
      tags:
      - Worker
      operationId: ChangePassword2
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerChangePassword'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerChangePasswordResponse'
        "401":
          description: Unauthorized
  /api/Worker/checkusername:
    post:
      tags:
      - Worker
      operationId: CheckUsername2
      parameters:
      - name: unity-api-version
        in: header
        description: The requested API version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          default: "3.0"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerCheckUsername'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerCheckResponse'
        "401":
          description: Unauthorized
components:
  schemas:
    AccessHistoryByLocationResponse:
      type: object
      properties:
        allTimeUses:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/LocationUses'
    LocationUses:
      type: object
      properties:
        uses:
          type: integer
          format: int32
        location:
          type: string
    AccessHistoryByLocationForCurrentSeasonResponse:
      type: object
      properties:
        seasonUses:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/LocationUses'
    AccessSummaryRequest:
      type: object
      properties:
        accessCode:
          type: string
        ipCode:
          type: string
        includeAllAccessInd:
          type: string
        checkNonPreloadedIP:
          type: string
    AccessEndPointCheckinRequest:
      type: object
      properties:
        accessEndPoint:
          $ref: '#/components/schemas/AccessEndPoint'
    AccessEndPoint:
      type: object
      properties:
        deviceId:
          $ref: '#/components/schemas/Identifier'
        locationId:
          $ref: '#/components/schemas/Identifier'
        resourceId:
          $ref: '#/components/schemas/Identifier'
        resource:
          $ref: '#/components/schemas/Resource'
    Identifier:
      type: object
      properties:
        ids:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SourceIdentifier'
    Resource:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        number:
          type: string
        description:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        locationId:
          $ref: '#/components/schemas/Identifier'
        points:
          type: integer
          format: int32
    SourceIdentifier:
      type: object
      properties:
        infoRecId:
          type: string
        infoSourceType:
          type: string
          enum:
          - None
          - Master
          - External
        sourceName:
          type: string
        sourceId:
          type: string
        infoRecField:
          type: string
        infoRecSource:
          type: string
    Location:
      type: object
      properties:
        locationId:
          $ref: '#/components/schemas/Identifier'
        parentLocationId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        children:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Location'
    AccessEndPointCheckinResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
    CurrentDaysRankResponse:
      type: object
      properties:
        daysRank:
          $ref: '#/components/schemas/AccessDaysRank'
    AccessDaysRank:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        displayName:
          type: string
        numberOfDays:
          type: integer
          format: int32
        season:
          type: integer
          format: int32
        daysRank:
          type: integer
          format: int32
    CurrentTramRankResponse:
      type: object
      properties:
        ridesRank:
          $ref: '#/components/schemas/AccessRidesRank'
    AccessRidesRank:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        displayName:
          type: string
        numberOfRides:
          type: integer
          format: int32
        season:
          type: integer
          format: int32
        ridesRank:
          type: integer
          format: int32
    DailyAccessHistoryByLocationResponse:
      type: object
      properties:
        dailyUses:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/DailyUses'
    DailyUses:
      type: object
      properties:
        uses:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        location:
          type: string
    DailyFirstAccessByLocationResponse:
      type: object
      properties:
        individualDays:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/IndividualDays'
    IndividualDays:
      type: object
      properties:
        accessCode:
          type: string
        skiDate:
          type: string
          format: date-time
        firstScanofDayTime:
          type: string
        product:
          type: string
        location:
          type: string
        season:
          type: string
    AccessForceDays:
      type: object
      properties:
        entitlementId:
          $ref: '#/components/schemas/Identifier'
        accessProductTypeCode:
          type: integer
          format: int32
        scanTypeDescription:
          type: string
        updateDate:
          type: string
          format: date-time
        forceDays:
          type: integer
          format: int32
        comments:
          type: string
        updatedBy:
          $ref: '#/components/schemas/Identifier'
    AccessHistoryResponse:
      type: object
      properties:
        hasActiveMedia:
          type: boolean
        seasonDays:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SeasonDays'
        allTimeDays:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SeasonDays'
        seasonUses:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SeasonUses'
        allTimeUses:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SeasonUses'
        skiDays:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SkiDays'
        prepaidAccess:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/PrepaidAccess'
        seasonPasses:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
        daysRank:
          $ref: '#/components/schemas/AccessDaysRank'
        ridesRank:
          $ref: '#/components/schemas/AccessRidesRank'
    SeasonDays:
      type: object
      properties:
        days:
          type: integer
          format: int32
        season:
          type: string
        currentSeason:
          type: boolean
    SeasonUses:
      type: object
      properties:
        uses:
          type: integer
          format: int32
        season:
          type: string
        currentSeason:
          type: boolean
    SkiDays:
      type: object
      properties:
        skiDate:
          type: string
          format: date-time
        firstScanTime:
          type: string
        location:
          type: string
        season:
          type: string
    PrepaidAccess:
      type: object
      properties:
        consumerDescription:
          type: string
        effectiveDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        days:
          type: integer
          format: int32
        remainingDays:
          type: integer
          format: int32
        accessHotlistCode:
          type: integer
          format: int32
        firstUseDate:
          type: string
          format: date-time
        lastUseDate:
          type: string
          format: date-time
    Ticket:
      type: object
      properties:
        accessCode:
          type: string
        effectiveDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        productDescription:
          type: string
        validDays:
          type: integer
          format: int32
        totalDays:
          type: integer
          format: int32
        usedDays:
          type: integer
          format: int32
        accessStatus:
          type: string
    AccessIndividualScanHistoryRequest:
      type: object
      properties:
        accessCode:
          type: string
        showValidInd:
          type: string
        showInvalidInd:
          type: string
        groupAccessInd:
          type: string
    IsSeasonPassHolderResponse:
      type: object
      properties:
        isSeasonPassHolder:
          type: boolean
    MediaHotlistRequest:
      type: object
      properties:
        ipCode:
          type: integer
          format: int32
        passMediaCode:
          type: string
        accessHotlistCode:
          type: integer
          format: int32
        accessProductTypeCode:
          type: integer
          format: int32
        commentText:
          type: string
        effectiveDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        groupAccessIndividual:
          type: string
    MobileAccessCheckinRequest:
      type: object
      properties:
        checkinValue:
          type: string
        checkinType:
          type: string
          enum:
          - Rfid
          - Barcode
          - Username
          - Unknown
    MobileAccessCheckinResponse:
      type: object
      properties:
        userName:
          type: string
        status:
          type: string
        message:
          type: string
    ActivateInactivatePassMediaProfileRequest:
      type: object
      properties:
        ipCode:
          type: integer
          format: int32
        passMediaCode:
          type: string
        passMediaStatusCode:
          type: integer
          format: int32
    PrepaidAccessProfileResponse:
      type: object
      properties:
        prepaidAccessProfiles:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/PrepaidAccessProfile'
    PrepaidAccessProfile:
      type: object
      properties:
        accessCode:
          type: string
        productDescription:
          type: string
        prepaidAccessStatusDescription:
          type: string
        effectiveDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        days:
          type: integer
          format: int32
        remainingDays:
          type: integer
          format: int32
        firstUseDate:
          type: string
          format: date-time
        lastUseDate:
          type: string
          format: date-time
    ProcessAccessRequest:
      type: object
      properties:
        accessEndPoint:
          $ref: '#/components/schemas/AccessEndPoint'
        identification:
          $ref: '#/components/schemas/Identification'
        date:
          type: string
          format: date-time
        functionCode:
          type: integer
          format: int32
        validateOnly:
          type: boolean
      example:
        accessEndPoint:
          deviceId:
            ids:
            - infoRecId: ""
              infoSourceType: 0
              sourceName: ""
          locationId:
            ids:
            - infoRecId: ""
              infoSourceType: 0
              sourceName: ""
        identification:
          identificationType: 0
          chipId: "67634237"
          username: user67634237
          isActive: false
        date: 0001-01-01T00:00:00
        functionCode: 0
        validateOnly: true
    Identification:
      type: object
      properties:
        identificationType:
          type: string
          enum:
          - Media
          - User
          - License
        identificationId:
          $ref: '#/components/schemas/Identifier'
        serialNumber:
          type: string
        mediaTypeDescription:
          type: string
        chipId:
          type: string
        barcodeId:
          type: string
        magneticStripId:
          type: string
        username:
          type: string
        licensePlateNumber:
          type: string
        isActive:
          type: boolean
      example:
        identificationType: 0
        barcodeId: I90001234567890
        isActive: true
    ProcessAccessResponse:
      type: object
      properties:
        line1:
          type: string
        line2:
          type: string
        line3:
          type: string
        mediaId:
          $ref: '#/components/schemas/Identification'
        product:
          $ref: '#/components/schemas/Product'
        beeps:
          type: integer
          format: int32
        mediaType:
          type: string
        success:
          type: boolean
        message:
          type: string
    Product:
      type: object
      properties:
        code:
          type: string
        productId:
          $ref: '#/components/schemas/Identifier'
        classification:
          type: string
          enum:
          - Single
          - Bundle
        productFamilyId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        productAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        productBundle:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Product'
        productComponents:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductComponent'
        productAttributes:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
        attributes:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    ProductAttributeValue:
      type: object
      properties:
        id:
          type: string
        productAttributeTypeId:
          $ref: '#/components/schemas/Identifier'
        productAttributeValueId:
          $ref: '#/components/schemas/Identifier'
        productAttributeTypeValueId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        value:
          type: string
        minValue:
          type: string
        maxValue:
          type: string
        valueType:
          type: string
    ProductComponent:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: double
        sku:
          type: string
    ProductAttribute:
      type: object
      properties:
        id:
          type: string
        productAttributeTypeId:
          $ref: '#/components/schemas/Identifier'
        productAttributeId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        productAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
    Attribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    TotalDaysBySeasonResponse:
      type: object
      properties:
        seasonDays:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SeasonDays'
    TotalDaysForCurrentSeasonResponse:
      type: object
      properties:
        totalDaysForCurrentSeason:
          type: integer
          format: int32
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Account:
      type: object
      properties:
        userId:
          $ref: '#/components/schemas/Identifier'
        userName:
          type: string
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date-time
    TimeBasedActivityCheckLockResponse:
      type: object
      properties:
        requestLockId:
          type: integer
          format: int32
        lockId:
          type: integer
          format: int32
        isExpired:
          type: boolean
        activityLockData:
          $ref: '#/components/schemas/LockData'
    LockData:
      type: object
      properties:
        activityInstances:
          $ref: '#/components/schemas/ActivityInstances'
    ActivityInstances:
      type: object
      properties:
        activityInstance:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ActivityInstance'
    ActivityInstance:
      type: object
      properties:
        activityCode:
          type: string
        activityDescription:
          type: string
        activityLocationCode:
          type: string
        startTime:
          type: string
        activityPlanCode:
          type: string
        activityScheduleCode:
          type: string
        availableInventoryCount:
          type: integer
          format: int32
        dayBasedInd:
          type: string
        duration:
          type: integer
          format: int32
        lockId:
          type: integer
          format: int32
        positionNumber:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    ReleaseLockRequest:
      type: object
      properties:
        lockId:
          type: integer
          format: int32
        store:
          type: string
    TimeBasedActivityReleaseLockResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    TimeBasedActivityAddLockRequest:
      type: object
      properties:
        activityCode:
          type: string
        productHeaderCode:
          type: string
        activityDateTime:
          type: string
        quantity:
          type: string
        activityLocationCode:
          type: string
        store:
          type: string
    TimeBasedActivityAddLockResponse:
      type: object
      properties:
        locks:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/TimeBasedActivityLock'
    TimeBasedActivityLock:
      type: object
      properties:
        masterLockId:
          type: string
        activityCode:
          type: string
        productHeaderCode:
          type: string
        quantity:
          type: string
        startDateTime:
          type: string
        expirationDateTime:
          type: string
    TimeBasedActivityRequest:
      type: object
      properties:
        activityCode:
          type: integer
          format: int32
        activityLocationCode:
          type: integer
          format: int32
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        productHeaderCode:
          type: string
        storeTimeZoneId:
          type: string
        store:
          type: string
    TimeBasedActivityResponse:
      type: object
      properties:
        activities:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/TimeBasedActivity'
    TimeBasedActivity:
      type: object
      properties:
        activityCode:
          type: integer
          format: int32
        activityLocationCode:
          type: integer
          format: int32
        startTimes:
          type: object
          additionalProperties:
            uniqueItems: false
            type: array
            items:
              $ref: '#/components/schemas/StartTime'
    StartTime:
      type: object
      properties:
        time:
          type: string
        duration:
          type: integer
          format: int32
        availableInventory:
          type: integer
          format: int32
    CustomSearchContactsRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date-time
        searchString:
          type: string
        terminalClientCode:
          type: integer
          format: int32
    CustomSearchContactsResponse:
      type: object
      properties:
        showGuestSelectionList:
          type: string
        searchResults:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/CustomSearchContactItem'
        success:
          type: boolean
        message:
          type: string
    CustomSearchContactItem:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date-time
        emailAddress:
          type: string
        rentalFormNumber:
          type: string
        saleLocation:
          type: string
        lastRentOutDate:
          type: string
          format: date-time
        orderId:
          $ref: '#/components/schemas/Identifier'
        primaryContactId:
          $ref: '#/components/schemas/Identifier'
        orderArrivalDate:
          type: string
          format: date-time
        mediaIdentification:
          $ref: '#/components/schemas/Identification'
        phone:
          type: string
        streetAddress:
          type: string
        streetAddress2:
          type: string
        city:
          type: string
        stateProvinceId:
          type: string
        zipPostalCode:
          type: string
        family:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/CustomSearchContactRelationshipItem'
        success:
          type: boolean
        message:
          type: string
    CustomSearchContactRelationshipItem:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date-time
        age:
          type: integer
          format: int32
        relationshipTypeCode:
          type: integer
          format: int32
        relationshipType:
          type: string
        roleCode:
          type: integer
          format: int32
        role:
          type: string
    Contact:
      type: object
      properties:
        active:
          type: boolean
        contactId:
          $ref: '#/components/schemas/Identifier'
        customerId:
          $ref: '#/components/schemas/Identifier'
        contactAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ContactAttributeValue'
        isCustomerPrimary:
          type: boolean
        memberships:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Membership'
        identifications:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Identification'
        media:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Media'
        relationship:
          $ref: '#/components/schemas/Relationship'
        status:
          type: string
        gender:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        nicknames:
          uniqueItems: false
          type: array
          items:
            type: string
        company:
          type: string
        streetAddress:
          type: string
        streetAddress2:
          type: string
        zipPostalCode:
          type: string
        city:
          type: string
        countryId:
          type: string
        stateProvince:
          type: string
        stateProvinceId:
          type: string
        phone:
          type: string
        fax:
          type: string
        dateOfBirth:
          type: string
        photo:
          type: string
        photoUrl:
          type: string
        alternateEmergencyContact1:
          type: string
        alternateEmergencyContact2:
          type: string
        alternateEmergencyPhone1:
          type: string
        alternateEmergencyPhone2:
          type: string
        drugAllergy:
          type: string
        foodAllergy:
          type: string
        medication:
          type: string
        primaryEmergencyContact:
          type: string
        primaryEmergencyPhone:
          type: string
        specialCondition:
          type: string
        candidateProducts:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Product'
        communicationProfile:
          $ref: '#/components/schemas/CommunicationProfile'
        dniNumber:
          type: string
        dniNumberType:
          type: string
      example:
        active: true
        isCustomerPrimary: true
        gender: f
        firstName: First15648436
        lastName: Last15648436
        dateOfBirth: 1/4/1990 12:00:00 AM
    ContactAttributeValue:
      type: object
      properties:
        id:
          type: string
        contactAttributeValueId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        value:
          type: string
        minValue:
          type: string
        maxValue:
          type: string
        valueType:
          type: string
    Membership:
      type: object
      properties:
        membershipId:
          $ref: '#/components/schemas/Identifier'
        description:
          type: string
    Media:
      type: object
      properties:
        identification:
          $ref: '#/components/schemas/Identification'
        photo:
          $ref: '#/components/schemas/Photo'
        mediaStatus:
          type: string
          enum:
          - Unknown
          - Active
          - Inactive
          - Paused
    Relationship:
      type: object
      properties:
        relationshipType:
          type: string
        relationshipGroupId:
          $ref: '#/components/schemas/Identifier'
    CommunicationProfile:
      type: object
      properties:
        profileTypeCode:
          type: integer
          format: int32
        profileTypeDescription:
          type: string
        profileTypeDisplayOrder:
          type: integer
          format: int32
        sequenceNumber:
          type: integer
          format: int32
        statusCode:
          type: integer
          format: int32
        statusDescription:
          type: string
        doNotMailInd:
          type: string
        doNotPhoneInd:
          type: string
        doNotFaxInd:
          type: string
        doNotEmailInd:
          type: string
        doNotDistributeInd:
          type: string
    Photo:
      type: object
      properties:
        photoUrl:
          type: string
    BaseAddress:
      type: object
      properties:
        addressId:
          $ref: '#/components/schemas/Identifier'
        isPrimary:
          type: boolean
        streetAddress:
          type: string
        streetAddress2:
          type: string
        zipPostalCode:
          type: string
        city:
          type: string
        countryId:
          type: string
        stateProvince:
          type: string
        stateProvinceId:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      example:
        isPrimary: true
        streetAddress: 63373966 main st
        streetAddress2: ""
        zipPostalCode: "80203"
        city: Denver
        countryId: USA
        stateProvinceId: CO
    GetEntitlementsRequest:
      type: object
      properties:
        productIds:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        filterCodes:
          type: string
    Entitlement:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        entitlementId:
          $ref: '#/components/schemas/Identifier'
        effectiveDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        entitlementTypeId:
          $ref: '#/components/schemas/Identifier'
        entitlementType:
          $ref: '#/components/schemas/EntitlementType'
        product:
          $ref: '#/components/schemas/Product'
        productFamily:
          $ref: '#/components/schemas/ProductFamily'
        attributes:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/EntitlementAttribute'
        contactId:
          $ref: '#/components/schemas/Identifier'
        orderItemId:
          $ref: '#/components/schemas/Identifier'
        productId:
          $ref: '#/components/schemas/Identifier'
        productAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        identification:
          $ref: '#/components/schemas/Identification'
        usage:
          $ref: '#/components/schemas/Usage'
        entitlementStatus:
          type: string
          enum:
          - Unknown
          - Active
          - Returned
          - Expired
          - NoWaiver
          - Hotlist
        entitlementStatusDetails:
          $ref: '#/components/schemas/EntitlementStatusDetails'
        orderItem:
          $ref: '#/components/schemas/OrderItem'
        price:
          type: number
          format: double
        type:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      example:
        entitlementId:
          ids:
          - infoRecId: "56749814"
            infoSourceType: 2
            sourceName: ""
        entitlementType:
          classification: 0
          name: AccessProduct
          entitlementAttributeValues:
          - name: Description
            value: Ikon Base Pass
          - name: Season
            value: 2019-2020
          - name: AgeBin
            value: Adult
          entitlementFulfillmentSeasonAttributes:
          - id: 4
            description: Winter 2019-2020
        attributes:
        - id: EmergencyName
          value: AEILYYOP
          options: []
        orderItemId:
          ids:
          - infoRecId: "63497334"
            infoSourceType: 1
            sourceName: ""
        entitlementStatus: 0
        entitlementStatusDetails:
          entitlementStatus: 1
    EntitlementType:
      type: object
      properties:
        entitlementTypeId:
          $ref: '#/components/schemas/Identifier'
        classification:
          type: string
          enum:
          - Single
          - Bundle
        productFamilyId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        entitlementAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/EntitlementAttributeValue'
        entitlementFulfillmentSeasonAttributes:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/BaseAttribute'
        entitlementTypeBundle:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/EntitlementType'
    ProductFamily:
      type: object
      properties:
        productFamilyId:
          $ref: '#/components/schemas/Identifier'
        parentProductFamilyId:
          $ref: '#/components/schemas/Identifier'
        lineOfBusinessId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        productAttributes:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
        children:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductFamily'
        products:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Product'
        uoM:
          type: string
          enum:
          - Day
          - Hr
          - Min
          - Lesson
          - Item
    EntitlementAttribute:
      type: object
      properties:
        id:
          type: string
        legacyAttributeId:
          type: string
        value:
          type: string
        options:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/PurchasedItemAttributeOption'
        entitlementAttributeId:
          $ref: '#/components/schemas/Identifier'
        entitlementAttributeTypeId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        entitlementAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/EntitlementAttributeValue'
    Usage:
      type: object
      properties:
        usageId:
          $ref: '#/components/schemas/Identifier'
        entitlement:
          $ref: '#/components/schemas/Entitlement'
        entitlementId:
          $ref: '#/components/schemas/Identifier'
        uoM:
          type: string
          enum:
          - Day
          - Hr
          - Min
          - Lesson
          - Item
        totalUsage:
          type: integer
          format: int32
        firstUsageDate:
          type: string
          format: date-time
        lastUsageDate:
          type: string
          format: date-time
        usedToday:
          type: boolean
          readOnly: true
        remainingDays:
          type: integer
          format: int32
        usageDetails:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/UsageDetail'
        uses:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Use'
        updatedBy:
          $ref: '#/components/schemas/Identifier'
    EntitlementStatusDetails:
      type: object
      properties:
        entitlementStatus:
          type: string
          enum:
          - Unknown
          - Active
          - Returned
          - Expired
          - NoWaiver
          - Hotlist
        comment:
          type: string
        effectiveDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
    OrderItem:
      type: object
      properties:
        orderId:
          $ref: '#/components/schemas/Identifier'
        orderItemId:
          $ref: '#/components/schemas/Identifier'
        quantity:
          type: integer
          format: int32
        overridePrice:
          type: boolean
        price:
          type: number
          format: double
        currencyCode:
          type: string
        product:
          $ref: '#/components/schemas/Product'
        autoFulfill:
          type: boolean
        reservations:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
        orderItemDays:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OrderItemDay'
        lineOfBusiness:
          type: string
    EntitlementAttributeValue:
      type: object
      properties:
        id:
          type: string
        entitlementAttributeValueId:
          $ref: '#/components/schemas/Identifier'
        entitlementAttributeTypeValueId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        value:
          type: string
        minValue:
          type: string
        maxValue:
          type: string
        valueType:
          type: string
    BaseAttribute:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
    PurchasedItemAttributeOption:
      type: object
      properties:
        value:
          type: string
    UsageDetail:
      type: object
      properties:
        contactFirstName:
          type: string
        contactId:
          $ref: '#/components/schemas/Identifier'
        contactLastName:
          type: string
        entitlement:
          $ref: '#/components/schemas/Entitlement'
        entitlementId:
          $ref: '#/components/schemas/Identifier'
        notes:
          type: string
        resource:
          $ref: '#/components/schemas/Resource'
        resourceId:
          $ref: '#/components/schemas/Identifier'
        state:
          type: string
        uoM:
          type: string
          enum:
          - Day
          - Hr
          - Min
          - Lesson
          - Item
        updatedBy:
          $ref: '#/components/schemas/Identifier'
        usageDate:
          type: string
          format: date-time
        usageDetailId:
          $ref: '#/components/schemas/Identifier'
        usageId:
          $ref: '#/components/schemas/Identifier'
    Use:
      type: object
      properties:
        useId:
          $ref: '#/components/schemas/Identifier'
        resource:
          $ref: '#/components/schemas/Resource'
        resourceId:
          $ref: '#/components/schemas/Identifier'
        entitlement:
          $ref: '#/components/schemas/Entitlement'
        entitlementId:
          $ref: '#/components/schemas/Identifier'
        useDate:
          type: string
          format: date-time
        usageId:
          $ref: '#/components/schemas/Identifier'
        usageDetailId:
          $ref: '#/components/schemas/Identifier'
        points:
          type: integer
          format: int32
        updatedBy:
          $ref: '#/components/schemas/Identifier'
        isValid:
          type: boolean
    Reservation:
      type: object
      properties:
        reservationId:
          $ref: '#/components/schemas/Identifier'
        releases:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ReleaseOfLiability'
        quantity:
          type: integer
          format: int32
        reservationDate:
          type: string
        reservationEndDate:
          type: string
        contact:
          $ref: '#/components/schemas/Contact'
        productId:
          $ref: '#/components/schemas/Identifier'
        product:
          $ref: '#/components/schemas/Product'
        locationId:
          $ref: '#/components/schemas/Identifier'
        productInventoryLocations:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductInventoryLocation'
        lockTag:
          type: string
        price:
          type: number
          format: double
        priceTag:
          type: string
        shippingDetails:
          $ref: '#/components/schemas/ShippingDetails'
        taxDetails:
          $ref: '#/components/schemas/TaxDetails'
        productAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        prompts:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ReservationPrompt'
        rentalDetails:
          $ref: '#/components/schemas/RentalDetails'
        privateLessonDetails:
          $ref: '#/components/schemas/PrivateLessonDetails'
        autofulfill:
          type: boolean
        requestLockId:
          type: integer
          format: int32
        productHeaderCode:
          type: string
    OrderItemDay:
      type: object
      properties:
        priceDate:
          type: string
        price:
          type: number
          format: double
        associatedReservationId:
          type: integer
          format: int32
    ReleaseOfLiability:
      type: object
      properties:
        rolAccepted:
          type: string
        rolText:
          type: string
        rolCode:
          type: string
        rolStartEffectiveDate:
          type: string
          format: date-time
        rolEndEffectiveDate:
          type: string
          format: date-time
        signature:
          type: string
        signatureDate:
          type: string
          format: date-time
    ProductInventoryLocation:
      type: object
      properties:
        productCode:
          type: string
        locationCode:
          type: string
        numberOfDays:
          type: integer
          format: int32
    ShippingDetails:
      type: object
      properties:
        shippingMethodName:
          type: string
        shippingMethodCode:
          type: string
        shippingLocationName:
          type: string
        shippingLocationCode:
          type: string
        shippingOptionName:
          type: string
        shippingOptionCode:
          type: string
        shippingFee:
          type: number
          format: double
        shipSeparately:
          type: boolean
        overrideShippingFeeFlag:
          type: boolean
        shipToAddressFlag:
          type: boolean
        usePrimaryShippingAddress:
          type: boolean
    TaxDetails:
      type: object
      properties:
        taxPaid:
          type: number
          format: double
        taxRate:
          type: number
          format: double
        overrideTaxRateFlag:
          type: boolean
    ReservationPrompt:
      type: object
      properties:
        code:
          type: string
        value:
          type: string
        valueCode:
          type: string
    RentalDetails:
      type: object
      properties:
        rentalLocationCode:
          type: string
        rentalLocationPhone:
          type: string
    PrivateLessonDetails:
      type: object
      properties:
        totalStudents:
          type: string
        productComponentCode:
          type: string
        comment:
          type: string
    GetHouseholdWaiversResponse:
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/Identifier'
        householdMembers:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/HouseholdMember'
    HouseholdMember:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        householdRole:
          type: string
        householdMemberWaivers:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/HouseholdMemberWaiver'
    HouseholdMemberWaiver:
      type: object
      properties:
        ipCode:
          type: integer
          format: int32
        profileTypeCode:
          type: integer
          format: int32
        sequenceNumber:
          type: integer
          format: int32
        statusCode:
          type: integer
          format: int32
        effectiveDate:
          type: string
          format: date-time
        authorizationTypeCode:
          type: integer
          format: int32
        expirationDate:
          type: string
          format: date-time
        operatorID:
          type: string
        updateDate:
          type: string
          format: date-time
        commentText:
          type: string
        authorizationProfileText:
          type: string
    CheckHouseholdWaiverResponse:
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/Identifier'
        householdMembers:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/HouseholdMemberWaiverStatus'
    HouseholdMemberWaiverStatus:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        isPrimary:
          type: boolean
        hasWaiver:
          type: boolean
    AssignMediaResponse:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        mediaIsActive:
          type: boolean
        responseCodeType:
          type: string
          enum:
          - Success
          - MediaAlreadyExistsOnAccountError
          - MediaIsAlreadyAssignedToAnotherUserError
          - MediaHasInvalidCodeError
          - MediaIsInactive
          - ContactMergeFailed
          - IPMergeFailed
    UpdateContactPhoto:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        photo:
          type: string
    RentalProfile:
      type: object
      properties:
        ageRefs:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/RentalProfileRefItem'
        abilityRefs:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/RentalProfileRefItem'
        heightRefs:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/RentalProfileRefItem'
        weightRefs:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/RentalProfileRefItem'
        shoeSizeRefs:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/RentalProfileRefItem'
        shoeSize:
          type: string
        selectedAge:
          type: string
        selectedAbility:
          type: string
        selectedHeight:
          type: string
        selectedWeight:
          type: string
        selectedShoeSize:
          type: string
        selectedGoofy:
          type: string
    RentalProfileRefItem:
      type: object
      properties:
        dinLookupValue:
          type: integer
          format: int32
        listDescription:
          type: string
        listKey:
          type: integer
          format: int32
    SaveRentalProfileRequest:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        selectedAge:
          type: string
        selectedAbility:
          type: string
        selectedHeight:
          type: string
        selectedWeight:
          type: string
        selectedShoeSize:
          type: string
        shoeSize:
          type: string
        selectedGoofy:
          type: string
    RentalFormResponse:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        rentalFormNumber:
          type: string
        contactId:
          $ref: '#/components/schemas/Identifier'
        orderId:
          type: string
        age:
          type: string
        height:
          type: string
        weight:
          type: string
        ability:
          type: string
        emergencyContact:
          type: string
        emergencyPhone:
          type: string
        allergies:
          type: string
        rentDate:
          type: string
          format: date-time
        success:
          type: boolean
        message:
          type: string
    SignLiabilityReleaseRequest:
      type: object
      properties:
        release:
          $ref: '#/components/schemas/ReleaseOfLiability'
        contactId:
          $ref: '#/components/schemas/Identifier'
        signerIsParticipant:
          type: boolean
        minors:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
      example:
        release:
          rolCode: Code83344481
          rolStartEffectiveDate: 2020-01-04T08:56:13.5498086-07:00
          rolEndEffectiveDate: 2020-01-04T08:56:13.5498086-07:00
          signature: Signature83344481
          signatureDate: 2020-01-04T08:56:13.5498086-07:00
        contactId:
          ids:
          - infoRecId: "123456"
            infoSourceType: 2
            sourceName: ""
        signerIsParticipant: true
    FindContactRequest:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        email:
          type: string
        nicknames:
          uniqueItems: false
          type: array
          items:
            type: string
        dateOfBirth:
          type: string
          format: date-time
        phoneNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        postalCode:
          type: string
        addressLine1:
          type: string
        city:
          type: string
      example:
        contactId:
          ids:
          - infoRecId: "1234"
            infoSourceType: 1
            sourceName: ""
        email: ""
        nicknames: []
        dateOfBirth: 0001-01-01T00:00:00
    SearchContactsRequest:
      type: object
      properties:
        search:
          $ref: '#/components/schemas/Search'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
      example:
        search:
          searchString: guest
          mediaNumber: ""
          name: ""
          phone: ""
          email: ""
          birthDate: ""
          contactId:
            ids:
            - infoRecId: ""
              infoSourceType: 0
              sourceName: ""
          postalCode: ""
        pageNumber: 0
        pageSize: 50
    Search:
      type: object
      properties:
        searchString:
          type: string
        mediaNumber:
          type: string
        name:
          type: string
        phone:
          type: string
        email:
          type: string
        birthDate:
          type: string
        contactId:
          $ref: '#/components/schemas/Identifier'
        postalCode:
          type: string
    SearchContactsResponse:
      type: object
      properties:
        contacts:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/SearchContact'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    SearchContact:
      type: object
      properties:
        active:
          type: boolean
        id:
          type: string
        contactId:
          $ref: '#/components/schemas/Identifier'
        customerId:
          $ref: '#/components/schemas/Identifier'
        isCustomerPrimary:
          type: boolean
        status:
          type: string
        gender:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
        company:
          type: string
        streetAddress:
          type: string
        streetAddress2:
          type: string
        zipPostalCode:
          type: string
        city:
          type: string
        countryId:
          type: string
        stateProvince:
          type: string
        stateProvinceId:
          type: string
        cityState:
          type: string
        phone:
          type: string
        fax:
          type: string
        dateOfBirth:
          type: string
        photo:
          type: string
        photoUrl:
          type: string
    SelfRegistrationCompleteRequest:
      type: object
      properties:
        contactIds:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        terminalClientCode:
          type: integer
          format: int32
        rentalEnabled:
          type: boolean
        minRentalUpdateDate:
          type: string
          format: date-time
        childRegistrationEnabled:
          type: boolean
        minChildRegUpdateDate:
          type: string
          format: date-time
        authTypeCode:
          type: integer
          format: int32
        minAuthProfileUpdateDate:
          type: string
          format: date-time
        salesChannelCode:
          type: integer
          format: int32
    SelfRegistrationCompleteResponse:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        fastFlowEligibleInd:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date-time
        authTypeDescription:
          type: string
        authTypeCode:
          type: integer
          format: int32
        authEffectiveDate:
          type: string
          format: date-time
        authExpirationDate:
          type: string
          format: date-time
        authUpdateDate:
          type: string
          format: date-time
        validAuthInd:
          type: string
        rentalAge:
          type: string
        rentalWeight:
          type: string
        rentalHeight:
          type: string
        rentalSkierType:
          type: string
        shoeSize:
          type: string
        goofyInd:
          type: string
        rentalUpdateDate:
          type: string
          format: date-time
        validRentalInd:
          type: string
        medication:
          type: string
        foodAllergy:
          type: string
        drugAllergy:
          type: string
        specialCondition:
          type: string
        primaryEmergencyContact:
          type: string
        primaryEmergencyPhone:
          type: string
        alternateEmergencyContact1:
          type: string
        aLternateEmergencyPhone1:
          type: string
        childRegUpdateDate:
          type: string
          format: date-time
        validChildRegInd:
          type: string
        upcomingOrderID:
          type: string
    Voucher:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
        description:
          type: string
        voucherType:
          type: string
        voucherStatus:
          type: string
        comment:
          type: string
        statusMessage:
          type: string
        expirationDate:
          type: string
          format: date-time
        displayName:
          type: string
        totalValue:
          type: number
          format: double
        currentValue:
          type: number
          format: double
        clientCode:
          type: integer
          format: int32
        voucherId:
          $ref: '#/components/schemas/Identifier'
        contactId:
          $ref: '#/components/schemas/Identifier'
        productId:
          $ref: '#/components/schemas/Identifier'
        orderId:
          $ref: '#/components/schemas/Identifier'
        orderDate:
          type: string
          format: date-time
        productComponents:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductComponent'
    LiabilityReleaseResponse:
      type: object
      properties:
        release:
          $ref: '#/components/schemas/ReleaseOfLiability'
        success:
          type: boolean
        message:
          type: string
    Customer:
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/Identifier'
        contacts:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        group:
          $ref: '#/components/schemas/RelationshipGroup'
        shippingAddresses:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ShippingAddress'
        billingAddresses:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/BillingAddress'
        addresses:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/BaseAddress'
        entitlements:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
        user:
          $ref: '#/components/schemas/User'
      example:
        customerId:
          ids:
          - infoRecId: "21295996"
            infoSourceType: 2
            sourceName: ""
        contacts:
        - active: false
          contactId:
            ids:
            - infoRecId: "95169313"
              infoSourceType: 2
              sourceName: ""
          customerId:
            ids:
            - infoRecId: "21295996"
              infoSourceType: 2
              sourceName: ""
          isCustomerPrimary: true
          email: r.pedersen21295996@aspenware.com
          firstName: First
          lastName: Last21295996
          streetAddress: 1702 W. Dry Creek Rd
          zipPostalCode: "80120"
          city: Littleton
          stateProvince: CO
          phone: 303-944-6151
          dateOfBirth: 1964-03-03
        shippingAddresses:
        - addressId:
            ids:
            - infoRecId: ""
              infoSourceType: 0
              sourceName: ""
          isPrimary: true
          streetAddress: ""
          zipPostalCode: ""
          city: ""
          countryId: ""
          stateProvince: ""
        billingAddresses:
        - addressId:
            ids:
            - infoRecId: ""
              infoSourceType: 0
              sourceName: ""
          isPrimary: false
    RelationshipGroup:
      type: object
      properties:
        relationshipGroupId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        type:
          type: string
        description:
          type: string
    ShippingAddress:
      type: object
      properties:
        addressId:
          $ref: '#/components/schemas/Identifier'
        isPrimary:
          type: boolean
        streetAddress:
          type: string
        streetAddress2:
          type: string
        zipPostalCode:
          type: string
        city:
          type: string
        countryId:
          type: string
        stateProvince:
          type: string
        stateProvinceId:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    BillingAddress:
      type: object
      properties:
        addressId:
          $ref: '#/components/schemas/Identifier'
        isPrimary:
          type: boolean
        streetAddress:
          type: string
        streetAddress2:
          type: string
        zipPostalCode:
          type: string
        city:
          type: string
        countryId:
          type: string
        stateProvince:
          type: string
        stateProvinceId:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    User:
      type: object
      properties:
        userId:
          $ref: '#/components/schemas/Identifier'
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        password:
          type: string
        securityStamp:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        gender:
          type: string
    UpdateCustomerBillingAddress:
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/Identifier'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
      example:
        customerId:
          ids:
          - infoRecId: "123456"
            infoSourceType: 1
            sourceName: ""
        billingAddress:
          addressId:
            ids:
            - infoRecId: "43586766"
              infoSourceType: 1
              sourceName: ""
          isPrimary: true
          streetAddress: 43586766 main st
          zipPostalCode: "80203"
          city: Denver
          countryId: USA
          stateProvinceId: CO
          email: aw-43586766@test.com
          phoneNumber: 888-867-5309
          firstName: First43586766
          lastName: Last43586766
    UpdateCustomerShippingAddress:
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/Identifier'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddress'
      example:
        customerId:
          ids:
          - infoRecId: "123456"
            infoSourceType: 1
            sourceName: ""
        shippingAddress:
          addressId:
            ids:
            - infoRecId: "64697714"
              infoSourceType: 1
              sourceName: ""
          isPrimary: true
          streetAddress: 64697714 main st
          zipPostalCode: "80203"
          city: Denver
          countryId: USA
          stateProvinceId: CO
          email: aw-64697714@test.com
          phoneNumber: 888-867-5309
          firstName: First64697714
          lastName: Last64697714
    SaveCreditCardRequest:
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/Identifier'
        creditCard:
          $ref: '#/components/schemas/CreditCard'
        profileTypeCode:
          type: integer
          format: int32
    CreditCard:
      type: object
      properties:
        creditCardId:
          $ref: '#/components/schemas/Identifier'
        isPrimary:
          type: boolean
        cardNumber:
          type: string
        cardName:
          type: string
        cardCvv2:
          type: string
        cardExpirationMonth:
          type: string
        cardExpirationYear:
          type: string
        cardType:
          type: string
    CustomerCreditCardSummary:
      type: object
      properties:
        maskedNumber:
          type: string
        creditCardType:
          type: string
          enum:
          - Visa
          - MasterCard
          - AmericanExpress
          - Discover
          - Other
    CreateLoyaltyAwardResponse:
      type: object
      properties:
        voucherId:
          $ref: '#/components/schemas/Identifier'
        voucherDescription:
          type: string
        expirationDate:
          type: string
          format: date-time
        voucherText:
          type: string
    GetLoyaltyPointsResponse:
      type: object
      properties:
        loyaltyId:
          $ref: '#/components/schemas/Identifier'
        loyaltyPoints:
          type: integer
          format: int32
        adjustmentPoints:
          type: integer
          format: int32
        awardPoints:
          type: integer
          format: int32
        pointsBalance:
          type: integer
          format: int32
    GetLoyaltyPointsDetailResponse:
      type: object
      properties:
        details:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyPointsDetail'
    LoyaltyPointsDetail:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        displayName:
          type: string
        loyaltyPointsCategory:
          type: string
        eventTypeDescription:
          type: string
        eventDate:
          type: string
        eventLocation:
          type: string
        eventDescription:
          type: string
        eventComment:
          type: string
        loyaltyPoints:
          type: integer
          format: int32
        totalPoints:
          type: integer
          format: int32
        transactionId:
          type: string
    UpdateResortChargeRequest:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        creditCard:
          $ref: '#/components/schemas/ResortChargeCreditCard'
        release:
          $ref: '#/components/schemas/ResortChargeReleaseOfLiability'
    ResortChargeCreditCard:
      type: object
      properties:
        isActive:
          type: boolean
        encryptedCardNumber:
          type: string
        creditCardId:
          $ref: '#/components/schemas/Identifier'
        isPrimary:
          type: boolean
        cardNumber:
          type: string
        cardName:
          type: string
        cardCvv2:
          type: string
        cardExpirationMonth:
          type: string
        cardExpirationYear:
          type: string
        cardType:
          type: string
    ResortChargeReleaseOfLiability:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        isActive:
          type: boolean
        comments:
          type: string
        rolAccepted:
          type: string
        rolText:
          type: string
        rolCode:
          type: string
        rolStartEffectiveDate:
          type: string
          format: date-time
        rolEndEffectiveDate:
          type: string
          format: date-time
        signature:
          type: string
        signatureDate:
          type: string
          format: date-time
    UpdateResortChargeWaiverRequest:
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/Identifier'
        authorizationTypeCode:
          type: integer
          format: int32
        statusCode:
          type: integer
          format: int32
        effectiveDate:
          type: string
        expirationDate:
          type: string
        commentText:
          type: string
    GetStoredValueForCustomerResponse:
      type: object
      properties:
        value:
          type: number
          format: double
    DiscountProfile:
      type: object
      properties:
        accessRules:
          uniqueItems: false
          type: array
          items:
            type: string
        description:
          type: string
    CancelEntitlementRequest:
      type: object
      properties:
        entitlement:
          $ref: '#/components/schemas/Entitlement'
      example:
        entitlement:
          entitlementId:
            ids:
            - infoRecId: "321280841"
              infoSourceType: 1
          contactId:
            ids:
            - infoRecId: "1060026"
              infoSourceType: 1
          productAttributeValues:
          - productAttributeTypeId:
              ids:
              - infoRecId: sponsor-classification
                infoSourceType: 1
            value: "7448"
          entitlementStatus: 0
    CancelEntitlementResponse:
      type: object
      properties:
        confirmationNumber:
          type: string
    EntitlementLookupResponse:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        contactName:
          type: string
        validLiftAccess:
          type: boolean
        accessProductName:
          type: string
        accessDaysRemaining:
          type: integer
          format: int32
        accessUsedToday:
          type: boolean
        validPassMedia:
          type: boolean
        passMediaCode:
          type: string
        rfid:
          type: string
        skiSchoolProductName:
          type: string
        skiSchoolDaysRemaining:
          type: integer
          format: int32
        skiSchoolUsedToday:
          type: boolean
    FulfillEntitlementRequest:
      type: object
      properties:
        clientCode:
          type: string
        confirmationNumber:
          type: string
        entitlements:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
      example:
        clientCode: "171"
        confirmationNumber: ABC123
        entitlements:
        - entitlementId:
            ids:
            - infoRecId: "321280841"
              infoSourceType: 2
          effectiveDate: 2020-01-04T08:56:13.5717946-07:00
          product:
            productId:
              ids:
              - infoRecId: "10345"
                infoSourceType: 1
            classification: 0
          identification:
            identificationType: 0
            chipId: "16147133534689824565"
            isActive: false
          entitlementStatus: 0
    FulfillEntitlementResponse:
      type: object
      properties:
        confirmations:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/EntitlementConfirmation'
    EntitlementConfirmation:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        orderId:
          $ref: '#/components/schemas/Identifier'
        transactionId:
          $ref: '#/components/schemas/Identifier'
        entitlementId:
          $ref: '#/components/schemas/Identifier'
    MediaPassAccess:
      type: object
      properties:
        cardNumber:
          type: string
        type:
          type: string
        status:
          type: string
        changeDate:
          type: string
          format: date-time
    UpdateEntitlementUsageRequest:
      type: object
      properties:
        action:
          type: string
        usageDetail:
          $ref: '#/components/schemas/UsageDetail'
      example:
        usageDetail:
          entitlementId:
            ids:
            - infoRecId: "12345"
              infoSourceType: 1
              sourceName: ""
          uoM: 0
          usageDetailId:
            ids:
            - infoRecId: "98765"
              infoSourceType: 1
              sourceName: ""
    UpdateEntitlementUsageResponse:
      type: object
      properties:
        status:
          type: string
    GetEntitlementUsageRequest:
      type: object
      properties:
        entitlementTypeIds:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        contactId:
          $ref: '#/components/schemas/Identifier'
    GetEntitlementUsageResponse:
      type: object
      properties:
        entitlementUsages:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/UsageDetail'
        success:
          type: boolean
        message:
          type: string
    CreateEntitlementWithIdentificationNoContactRequest:
      type: object
      properties:
        entitlement:
          $ref: '#/components/schemas/Entitlement'
        identification:
          $ref: '#/components/schemas/Identification'
      example:
        entitlement:
          entitlementId:
            ids:
            - infoRecId: "96332963"
              infoSourceType: 2
              sourceName: ""
          entitlementType:
            classification: 0
            entitlementAttributeValues:
            - name: Description
              value: Ikon Base Pass
            - name: Season
              value: 2019-2020
            - name: AgeBin
              value: Adult
            entitlementFulfillmentSeasonAttributes:
            - id: 4
              description: Winter 2019-2020
          entitlementStatus: 0
          entitlementStatusDetails:
            entitlementStatus: 1
        identification:
          identificationType: 0
          identificationId:
            ids:
            - infoRecId: "57144235"
              infoSourceType: 2
              sourceName: ""
          isActive: false
    CreateEntitlementWithIdentificationNoContactResponse:
      type: object
      properties:
        entitlementId:
          $ref: '#/components/schemas/Identifier'
        identification:
          $ref: '#/components/schemas/Identification'
        success:
          type: boolean
        message:
          type: string
    UpdateEntitlementsRequest:
      type: object
      properties:
        entitlements:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
        identification:
          $ref: '#/components/schemas/Identification'
        media:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Media'
        contactId:
          $ref: '#/components/schemas/Identifier'
      example:
        entitlements:
        - entitlementId:
            ids:
            - infoRecId: "74139514"
              infoSourceType: 2
              sourceName: ""
          entitlementType:
            classification: 0
            entitlementAttributeValues:
            - name: Description
              value: Ikon Base Pass
            - name: Season
              value: 2019-2020
            - name: AgeBin
              value: Adult
            entitlementFulfillmentSeasonAttributes:
            - id: 4
              description: Winter 2019-2020
          entitlementStatus: 0
          entitlementStatusDetails:
            entitlementStatus: 1
        media:
        - identification:
            identificationType: 0
            chipId: "16140000111122223333"
            barcodeId: I98880012341234
            isActive: false
          mediaStatus: 1
        contactId:
          ids:
          - infoRecId: "56324982"
            infoSourceType: 1
            sourceName: ""
    GetEntitlementResponse:
      type: object
      properties:
        entitlement:
          $ref: '#/components/schemas/Entitlement'
    EntitlementNoteResponse:
      type: object
      properties:
        entitlementId:
          $ref: '#/components/schemas/Identifier'
        noteId:
          $ref: '#/components/schemas/Identifier'
        note:
          type: string
    ValidateAdditionalPaymentResponse:
      type: object
      properties:
        number:
          type: string
        availableAmount:
          type: number
          format: double
        isValid:
          type: boolean
        paymentType:
          type: string
        message:
          type: string
    UnityPrompt:
      type: object
      properties:
        code:
          type: integer
          format: int32
        data:
          type: string
        text:
          type: string
        type:
          type: string
    MediaEntitlementResponse:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        contactId:
          $ref: '#/components/schemas/Identifier'
        accessLine1:
          type: string
        accessLine2:
          type: string
        accessLine3:
          type: string
        entitlements:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
        success:
          type: boolean
        message:
          type: string
    GetEntitlementsByProductRequest:
      type: object
      properties:
        productId:
          $ref: '#/components/schemas/Identifier'
        locationId:
          $ref: '#/components/schemas/Identifier'
        minDate:
          type: string
          format: date-time
        maxDate:
          type: string
          format: date-time
    GetEntitlementsByProductResponse:
      type: object
      properties:
        entitlements:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
    UpdateEntitlementsEntitlementStatusRequest:
      type: object
      properties:
        entitlements:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
        contactId:
          $ref: '#/components/schemas/Identifier'
        media:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Media'
      example:
        entitlements:
        - entitlementId:
            ids:
            - infoRecId: "68867495"
              infoSourceType: 2
              sourceName: ""
          entitlementType:
            classification: 0
            entitlementAttributeValues:
            - name: Description
              value: Ikon Base Pass
            - name: Season
              value: 2019-2020
            - name: AgeBin
              value: Adult
            entitlementFulfillmentSeasonAttributes:
            - id: 4
              description: Winter 2019-2020
          entitlementStatus: 0
          entitlementStatusDetails:
            entitlementStatus: 5
            comment: Fraudulent Use - test hotlist
            effectiveDate: 2020-01-04T00:00:00-07:00
            expirationDate: 2021-01-04T00:00:00-07:00
        contactId:
          ids:
          - infoRecId: "88875959"
            infoSourceType: 1
            sourceName: ""
        media:
        - identification:
            identificationType: 0
            chipId: "16140000111122223333"
            barcodeId: I98880012341234
            isActive: false
          mediaStatus: 1
    UpdateEntitlementUseRequest:
      type: object
      properties:
        uses:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Use'
        contact:
          $ref: '#/components/schemas/Contact'
        media:
          $ref: '#/components/schemas/Identification'
      example:
        uses:
        - resource:
            resourceId:
              ids:
              - infoRecId: master-resource-id
                infoSourceType: 2
            location:
              name: location
            points: 0
          entitlement:
            entitlementId:
              ids:
              - infoRecId: external-entitlement-id
                infoSourceType: 2
            entitlementType:
              classification: 0
              entitlementAttributeValues:
              - name: Description
                value: Ikon Base Pass
              - name: Season
                value: 2019-2020
              - name: AgeBin
                value: Adult
              entitlementFulfillmentSeasonAttributes:
              - id: 4
                description: Winter 2019-2020
            entitlementStatus: 0
          entitlementId:
            ids:
            - infoRecId: external-entitlement-id
              infoSourceType: 2
          useDate: 2020-01-04T08:56:13.5827656-07:00
          points: 0
          updatedBy:
            ids:
            - infoRecId: master-updatedby-id
              infoSourceType: 2
          isValid: true
    Itinerary:
      type: object
      properties:
        id:
          type: string
        itineraryId:
          $ref: '#/components/schemas/Identifier'
        arrivalDate:
          type: string
        departureDate:
          type: string
    LoyaltyAwardEvent:
      type: object
      properties:
        statusDescription:
          type: string
        loyaltyAwardStatusDescription:
          type: string
        awardDate:
          type: string
          format: date-time
        voucherID:
          type: string
        voucherDescription:
          type: string
        loyaltyAwardDescription:
          type: string
        loyaltyPoints:
          type: number
          format: double
        redemptionDate:
          type: string
          format: date-time
        comment:
          type: string
    LoyaltyOverview:
      type: object
      properties:
        passMediaCode:
          type: string
        pointsBalance:
          type: number
          format: double
        loyaltyProgram:
          type: string
        loyaltyProgramStatus:
          type: string
        enrollmentDate:
          type: string
          format: date-time
    RedeemAwardPointsResponse:
      type: object
      properties:
        loyaltyAwardCode:
          type: integer
          format: int32
        voucherId:
          type: string
    CheckContactExistsResponse:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        success:
          type: boolean
        message:
          type: string
    UpdateMediaRequest:
      type: object
      properties:
        entitlements:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
        media:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Media'
        contactId:
          $ref: '#/components/schemas/Identifier'
      example:
        entitlements:
        - entitlementId:
            ids:
            - infoRecId: "33829473"
              infoSourceType: 2
              sourceName: ""
          entitlementType:
            classification: 0
            entitlementAttributeValues:
            - name: Description
              value: Ikon Base Pass
            - name: Season
              value: 2019-2020
            - name: AgeBin
              value: Adult
            entitlementFulfillmentSeasonAttributes:
            - id: 4
              description: Winter 2019-2020
          entitlementStatus: 0
          entitlementStatusDetails:
            entitlementStatus: 1
        media:
        - identification:
            identificationType: 0
            chipId: "16140000111122223333"
            barcodeId: I98880012341234
            isActive: false
          mediaStatus: 1
        contactId:
          ids:
          - infoRecId: "49284581"
            infoSourceType: 1
            sourceName: ""
    UpdateMediaIdentificationRequest:
      type: object
      properties:
        identification:
          $ref: '#/components/schemas/Identification'
        contactId:
          $ref: '#/components/schemas/Identifier'
        entitlements:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
      example:
        identification:
          identificationType: 0
          serialNumber: I90001234567890
          chipId: "16141111222233334444"
          barcodeId: I90001234567890
          isActive: true
    CheckMediaIdentificationExistsRequest:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        identification:
          $ref: '#/components/schemas/Identification'
    CheckMediaIdentificationExistsResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
    Order:
      type: object
      properties:
        orderId:
          $ref: '#/components/schemas/Identifier'
        customer:
          $ref: '#/components/schemas/Customer'
        itinerary:
          $ref: '#/components/schemas/Itinerary'
        shippingFee:
          type: number
          format: double
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddress'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        creditCard:
          $ref: '#/components/schemas/CreditCard'
        waiverCreditCard:
          $ref: '#/components/schemas/CreditCard'
        saveToken:
          type: boolean
        orderItems:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        paymentComment:
          type: string
        usedVouchers:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/UsedVoucher'
        additionalPayments:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/UsedPayment'
        errorCode:
          type: string
        errorMessage:
          type: string
        isRentalOrder:
          type: boolean
        saleLocationCode:
          type: string
        qrCode:
          type: string
        store:
          type: string
      example:
        customer:
          customerId:
            ids:
            - infoRecId: "97892674"
              infoSourceType: 1
              sourceName: ""
        shippingFee: 0
        saveToken: false
        orderItems:
        - orderItemId:
            ids:
            - infoRecId: "77349532"
              infoSourceType: 1
              sourceName: ""
          quantity: 3
          overridePrice: false
          price: 100
          product:
            productId:
              ids:
              - infoRecId: "63911"
                infoSourceType: 1
                sourceName: ""
            classification: 0
          autoFulfill: false
          reservations:
          - quantity: 3
            productId:
              ids:
              - infoRecId: "32828"
                infoSourceType: 1
                sourceName: ""
            locationId:
              ids:
              - infoRecId: "22089"
                infoSourceType: 1
                sourceName: ""
            price: 0
            productAttributeValues: []
            autofulfill: false
            requestLockId: 0
        isRentalOrder: false
    UsedVoucher:
      type: object
      properties:
        usedValue:
          type: number
          format: double
        voucher:
          $ref: '#/components/schemas/Voucher'
    UsedPayment:
      type: object
      properties:
        amount:
          type: number
          format: double
        number:
          type: string
        paymentType:
          type: string
    OrderEntitlementsRequest:
      type: object
      properties:
        orderId:
          $ref: '#/components/schemas/Identifier'
        filterCodes:
          type: string
    OrderEntitlementsResponse:
      type: object
      properties:
        entitlements:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
    OrderStatus:
      type: object
      properties:
        status:
          type: string
          enum:
          - NotProcessed
          - Processed
          - Failed
        orderId:
          $ref: '#/components/schemas/Identifier'
        error:
          type: string
    AddOrderTransactionForPaymentAndDepositRequest:
      type: object
      properties:
        externalOrderId:
          type: string
        externalOrderLine:
          type: string
        customerIpCode:
          type: integer
          format: int32
        store:
          type: string
        depositTotal:
          type: number
          format: double
    AddOrderTransactionForPaymentAndDepositResponse:
      type: object
      properties:
        isSuccessful:
          type: boolean
        errorMessage:
          type: string
    FulfillOrderResponse:
      type: object
      properties:
        isSuccessful:
          type: boolean
        errorMessage:
          type: string
    IsOrderLockedResponse:
      type: object
      properties:
        isOrderLocked:
          type: boolean
        errorMessage:
          type: string
    IsOrderLineOpenResponse:
      type: object
      properties:
        isOrderLineOpen:
          type: boolean
    GetOrderMetadataResponse:
      type: object
      properties:
        isSuccessful:
          type: boolean
        errorMessage:
          type: string
        orderMetadata:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OrderMetadata'
    OrderMetadata:
      type: object
      properties:
        externalOrderId:
          type: string
        externalOrderLine:
          type: string
        transactionId:
          type: string
        transactionLine:
          type: integer
          format: int32
        accessCode:
          type: string
        productDate:
          type: string
          format: date-time
        effectiveDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        productHeaderConsumerDescription:
          type: string
        description:
          type: string
    OrdersInDayResponse:
      type: object
      properties:
        orderLineItems:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OrderHistoryItem'
    OrderHistoryItem:
      type: object
      properties:
        ipcode:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        orderId:
          type: string
        orderLine:
          type: integer
          format: int32
        orderOrTransactionInd:
          type: string
        product:
          type: string
        productDate:
          type: string
          format: date-time
        productDateGroup:
          type: string
          format: date-time
        maxDays:
          type: number
          format: double
        totalDays:
          type: number
          format: double
    OrdersInMonthResponse:
      type: object
      properties:
        orderHistoryDayItems:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OrderHistoryDayItem'
    OrderHistoryDayItem:
      type: object
      properties:
        date:
          type: string
          format: date-time
        orderLineItems:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OrderHistoryItem'
    CheckInventoryRequest:
      type: object
      properties:
        checkProductInventoryRequests:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/CheckProductInventoryRequest'
        store:
          type: string
    CheckProductInventoryRequest:
      type: object
      properties:
        sourceProductName:
          type: string
        productInventoryLocations:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductInventoryLocation'
        inventoryDate:
          type: string
          format: date-time
        inventoryEndDate:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int32
    CheckInventoryResponse:
      type: object
      properties:
        noInventorySourceProductName:
          uniqueItems: false
          type: array
          items:
            type: string
    GetInventoryForMonthRequest:
      type: object
      properties:
        codes:
          uniqueItems: false
          type: array
          items:
            type: string
        location:
          type: string
        selectedDate:
          type: string
          format: date-time
        selectedEndDate:
          type: string
          format: date-time
        startTime:
          type: string
        endTime:
          type: string
        numberOfDays:
          type: integer
          format: int32
        isForSeason:
          type: boolean
        store:
          type: string
    GetInventoryForMonthResponse:
      type: object
      properties:
        inventory:
          uniqueItems: false
          type: array
          items:
            type: integer
            format: int32
    GetLOBRequest:
      type: object
      properties:
        lineOfBusinessId:
          $ref: '#/components/schemas/Identifier'
    GetLOBResponse:
      type: object
      properties:
        lob:
          $ref: '#/components/schemas/LineOfBusiness'
    LineOfBusiness:
      type: object
      properties:
        lineOfBusinessId:
          $ref: '#/components/schemas/Identifier'
        parentLOBId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        children:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/LineOfBusiness'
    LockProductInventoryItemRequest:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        customerName:
          type: string
        orderId:
          $ref: '#/components/schemas/Identifier'
        inventoryItem:
          $ref: '#/components/schemas/InventoryItem'
        quantity:
          type: integer
          format: int32
        cardNumber:
          type: string
        cardExpirationMonth:
          type: string
        cardExpirationYear:
          type: string
        note:
          type: string
      example:
        contactId:
          ids:
          - infoRecId: "1061077"
            infoSourceType: 1
        orderId:
          ids:
          - infoRecId: "123"
            infoSourceType: 1
        inventoryItem:
          locationId:
            ids:
            - infoRecId: "5125"
              infoSourceType: 1
          productId:
            ids:
            - infoRecId: "32828"
              infoSourceType: 1
          productAttributeValues:
          - productAttributeTypeId:
              ids:
              - infoRecId: teetime-date-classification
                infoSourceType: 1
            value: 1/5/2020
          - productAttributeTypeId:
              ids:
              - infoRecId: teetime-time-classification
                infoSourceType: 1
            value: 1:05:30 PM
          - productAttributeTypeId:
              ids:
              - infoRecId: number-of-holes-classification
                infoSourceType: 1
            value: 18 holes
          - productAttributeTypeId:
              ids:
              - infoRecId: number-of-players-classification
                infoSourceType: 1
            value: 1-4
          - productAttributeTypeId:
              ids:
              - infoRecId: sponsor-classification
                infoSourceType: 1
            value: "7448"
          price: 0
          basePrice: 0
          saveAmount: 0
          savePercent: 0
        quantity: 3
    InventoryItem:
      type: object
      properties:
        inventoryItemId:
          $ref: '#/components/schemas/Identifier'
        locationId:
          $ref: '#/components/schemas/Identifier'
        productId:
          $ref: '#/components/schemas/Identifier'
        productAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        priceId:
          $ref: '#/components/schemas/Identifier'
        price:
          type: number
          format: double
        basePrice:
          type: number
          format: double
        saveAmount:
          type: number
          format: double
        savePercent:
          type: number
          format: double
    LockProductInventoryItemResponse:
      type: object
      properties:
        inventoryItem:
          $ref: '#/components/schemas/InventoryItem'
        lockTag:
          type: string
        priceTag:
          type: string
        confirmationId:
          type: string
        message:
          type: string
        success:
          type: boolean
        priceList:
          $ref: '#/components/schemas/PriceList'
    PriceList:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        priceListItems:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/PriceListItem'
    PriceListItem:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        productId:
          $ref: '#/components/schemas/Identifier'
        price:
          type: number
          format: double
        unitPrice:
          type: number
          format: double
    LockProductInventoryItemsRequest:
      type: object
      properties:
        requestItems:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/LockProductInventoryItemRequest'
      example:
        requestItems:
        - contactId:
            ids:
            - infoRecId: "1061077"
              infoSourceType: 1
          orderId:
            ids:
            - infoRecId: "123"
              infoSourceType: 1
          inventoryItem:
            locationId:
              ids:
              - infoRecId: "5125"
                infoSourceType: 1
            productId:
              ids:
              - infoRecId: "32828"
                infoSourceType: 1
            productAttributeValues:
            - productAttributeTypeId:
                ids:
                - infoRecId: teetime-date-classification
                  infoSourceType: 1
              value: 1/5/2020
            - productAttributeTypeId:
                ids:
                - infoRecId: teetime-time-classification
                  infoSourceType: 1
              value: 1:05:30 PM
            - productAttributeTypeId:
                ids:
                - infoRecId: number-of-holes-classification
                  infoSourceType: 1
              value: 18 holes
            - productAttributeTypeId:
                ids:
                - infoRecId: number-of-players-classification
                  infoSourceType: 1
              value: 1-4
            - productAttributeTypeId:
                ids:
                - infoRecId: sponsor-classification
                  infoSourceType: 1
              value: "7448"
            price: 0
            basePrice: 0
            saveAmount: 0
            savePercent: 0
          quantity: 3
        - contactId:
            ids:
            - infoRecId: "1061077"
              infoSourceType: 1
          orderId:
            ids:
            - infoRecId: "123"
              infoSourceType: 1
          inventoryItem:
            locationId:
              ids:
              - infoRecId: "5125"
                infoSourceType: 1
            productId:
              ids:
              - infoRecId: "32828"
                infoSourceType: 1
            productAttributeValues:
            - productAttributeTypeId:
                ids:
                - infoRecId: teetime-date-classification
                  infoSourceType: 1
              value: 1/5/2020
            - productAttributeTypeId:
                ids:
                - infoRecId: teetime-time-classification
                  infoSourceType: 1
              value: 1:05:30 PM
            - productAttributeTypeId:
                ids:
                - infoRecId: number-of-holes-classification
                  infoSourceType: 1
              value: 18 holes
            - productAttributeTypeId:
                ids:
                - infoRecId: number-of-players-classification
                  infoSourceType: 1
              value: 1-4
            - productAttributeTypeId:
                ids:
                - infoRecId: sponsor-classification
                  infoSourceType: 1
              value: "7448"
            price: 0
            basePrice: 0
            saveAmount: 0
            savePercent: 0
          quantity: 3
        - contactId:
            ids:
            - infoRecId: "1061077"
              infoSourceType: 1
          orderId:
            ids:
            - infoRecId: "123"
              infoSourceType: 1
          inventoryItem:
            locationId:
              ids:
              - infoRecId: "5125"
                infoSourceType: 1
            productId:
              ids:
              - infoRecId: "32828"
                infoSourceType: 1
            productAttributeValues:
            - productAttributeTypeId:
                ids:
                - infoRecId: teetime-date-classification
                  infoSourceType: 1
              value: 1/5/2020
            - productAttributeTypeId:
                ids:
                - infoRecId: teetime-time-classification
                  infoSourceType: 1
              value: 1:05:30 PM
            - productAttributeTypeId:
                ids:
                - infoRecId: number-of-holes-classification
                  infoSourceType: 1
              value: 18 holes
            - productAttributeTypeId:
                ids:
                - infoRecId: number-of-players-classification
                  infoSourceType: 1
              value: 1-4
            - productAttributeTypeId:
                ids:
                - infoRecId: sponsor-classification
                  infoSourceType: 1
              value: "7448"
            price: 0
            basePrice: 0
            saveAmount: 0
            savePercent: 0
          quantity: 3
        - contactId:
            ids:
            - infoRecId: "1061077"
              infoSourceType: 1
          orderId:
            ids:
            - infoRecId: "123"
              infoSourceType: 1
          inventoryItem:
            locationId:
              ids:
              - infoRecId: "5125"
                infoSourceType: 1
            productId:
              ids:
              - infoRecId: "32828"
                infoSourceType: 1
            productAttributeValues:
            - productAttributeTypeId:
                ids:
                - infoRecId: teetime-date-classification
                  infoSourceType: 1
              value: 1/5/2020
            - productAttributeTypeId:
                ids:
                - infoRecId: teetime-time-classification
                  infoSourceType: 1
              value: 1:05:30 PM
            - productAttributeTypeId:
                ids:
                - infoRecId: number-of-holes-classification
                  infoSourceType: 1
              value: 18 holes
            - productAttributeTypeId:
                ids:
                - infoRecId: number-of-players-classification
                  infoSourceType: 1
              value: 1-4
            - productAttributeTypeId:
                ids:
                - infoRecId: sponsor-classification
                  infoSourceType: 1
              value: "7448"
            price: 0
            basePrice: 0
            saveAmount: 0
            savePercent: 0
          quantity: 3
    LockProductInventoryItemsResponse:
      type: object
      properties:
        responseItems:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/LockProductInventoryItemResponse'
    GetProductAttributeTypeRequest:
      type: object
      properties:
        productAttributeTypeId:
          $ref: '#/components/schemas/Identifier'
        productAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
    GetProductAttributeTypeResponse:
      type: object
      properties:
        productAttributes:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
        productAttributeType:
          $ref: '#/components/schemas/ProductAttributeType'
    ProductAttributeType:
      type: object
      properties:
        id:
          type: string
        productAttributeTypeId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        productAttributeTypeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeTypeValue'
    ProductAttributeTypeValue:
      type: object
      properties:
        id:
          type: string
        productAttributeTypeValueId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
        description:
          type: string
        value:
          type: string
        minValue:
          type: string
        maxValue:
          type: string
        valueType:
          type: string
    GetProductFamiliesByCatalogRequest:
      type: object
      properties:
        salesChannelId:
          $ref: '#/components/schemas/Identifier'
        includeProducts:
          type: boolean
    GetProductFamiliesByCatalogResponse:
      type: object
      properties:
        productFamilies:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductFamily'
    GetProductFamiliesByLOBRequest:
      type: object
      properties:
        lineOfBusinessId:
          $ref: '#/components/schemas/Identifier'
        includeProducts:
          type: boolean
    GetProductFamiliesByLOBResponse:
      type: object
      properties:
        productFamilies:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductFamily'
    GetProductFamilyRequest:
      type: object
      properties:
        productFamilyId:
          $ref: '#/components/schemas/Identifier'
        includeProducts:
          type: boolean
        clientCode:
          type: string
    GetProductFamilyResponse:
      type: object
      properties:
        productFamily:
          $ref: '#/components/schemas/ProductFamily'
    GetProductInventoryRequest:
      type: object
      properties:
        productFamilyId:
          $ref: '#/components/schemas/Identifier'
        productAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        connectorUrl:
          type: string
      example:
        productFamilyId:
          ids:
          - infoRecId: golf-tee-time
            infoSourceType: 1
        productAttributeValues:
        - productAttributeTypeId:
            ids:
            - infoRecId: sponsor-classification
              infoSourceType: 1
          value: "7448"
        - productAttributeTypeId:
            ids:
            - infoRecId: course-classification
              infoSourceType: 1
          value: "5125"
        - productAttributeTypeId:
            ids:
            - infoRecId: teetime-date-classification
              infoSourceType: 1
          value: 1/5/2020
        - productAttributeTypeId:
            ids:
            - infoRecId: number-of-holes-classification
              infoSourceType: 1
          value: 18Holes
    GetProductInventoryResponse:
      type: object
      properties:
        inventoryItems:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/InventoryItem'
    GetProductsByProductFamilyRequest:
      type: object
      properties:
        productFamilyId:
          $ref: '#/components/schemas/Identifier'
        salesChannelId:
          $ref: '#/components/schemas/Identifier'
        locationId:
          $ref: '#/components/schemas/Identifier'
        dateTime:
          type: string
    GetProductsByProductFamilyResponse:
      type: object
      properties:
        productFamily:
          $ref: '#/components/schemas/ProductFamily'
        products:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/Product'
    ProductSyncRequest:
      type: object
      properties:
        productType:
          type: string
        store:
          type: string
    ProductSyncResponse:
      type: object
      properties:
        products:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
    ProductVariant:
      type: object
      properties:
        attributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
        name:
          type: string
        quantityOnHand:
          type: integer
          format: int32
        sku:
          type: string
    AttributeValue:
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    ProductResourceRequest:
      type: object
      properties:
        productFamilyId:
          $ref: '#/components/schemas/Identifier'
        productAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        connectorUrl:
          type: string
      example:
        productFamilyId:
          ids:
          - infoRecId: golf-tee-time
            infoSourceType: 1
        productAttributeValues:
        - productAttributeTypeId:
            ids:
            - infoRecId: sponsor-classification
              infoSourceType: 1
          value: "7448"
        - productAttributeTypeId:
            ids:
            - infoRecId: course-classification
              infoSourceType: 1
          value: "5125"
        - productAttributeTypeId:
            ids:
            - infoRecId: teetime-date-classification
              infoSourceType: 1
          value: 1/5/2020
    ProductResourceResponse:
      type: object
      properties:
        resourceItems:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ResourceItem'
    ResourceItem:
      type: object
      properties:
        resourceItemId:
          $ref: '#/components/schemas/Identifier'
        locationId:
          $ref: '#/components/schemas/Identifier'
        productId:
          $ref: '#/components/schemas/Identifier'
        productAttributeValues:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
        productAttributes:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
    SyncProductInventoryRequest:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        refreshSubscriptions:
          type: boolean
    SyncProductInventoryResponse:
      type: object
      properties:
        status:
          type: string
        productAttributes:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
    ValidateInventoryItemsRequest:
      type: object
      properties:
        requestItems:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ValidateInventoryItemRequest'
      example:
        requestItems:
        - contactId:
            ids:
            - infoRecId: "26613143"
              infoSourceType: 1
          inventoryItem:
            locationId:
              ids:
              - infoRecId: "5125"
                infoSourceType: 1
            productId:
              ids:
              - infoRecId: "32828"
                infoSourceType: 1
            productAttributeValues:
            - productAttributeTypeId:
                ids:
                - infoRecId: teetime-date-classification
                  infoSourceType: 1
              value: 1/5/2020
            - productAttributeTypeId:
                ids:
                - infoRecId: teetime-time-classification
                  infoSourceType: 1
              value: 1:05:30 PM
            - productAttributeTypeId:
                ids:
                - infoRecId: number-of-holes-classification
                  infoSourceType: 1
              value: 18 holes
            - productAttributeTypeId:
                ids:
                - infoRecId: number-of-players-classification
                  infoSourceType: 1
              value: 1-4
            - productAttributeTypeId:
                ids:
                - infoRecId: sponsor-classification
                  infoSourceType: 1
              value: "7448"
            price: 0
            basePrice: 0
            saveAmount: 0
            savePercent: 0
          quantity: 3
    ValidateInventoryItemRequest:
      type: object
      properties:
        contactId:
          $ref: '#/components/schemas/Identifier'
        inventoryItem:
          $ref: '#/components/schemas/InventoryItem'
        quantity:
          type: integer
          format: int32
    ValidateInventoryItemsResponse:
      type: object
      properties:
        responseItems:
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/ValidateInventoryItemResponse'
    ValidateInventoryItemResponse:
      type: object
      properties:
        inventoryItem:
          $ref: '#/components/schemas/InventoryItem'
        lockTag:
          type: string
        priceTag:
          type: string
        priceList:
          $ref: '#/components/schemas/PriceList'
        success:
          type: boolean
        message:
          type: string
    LoginResponse:
      type: object
      properties:
        status:
          type: string
        customerId:
          $ref: '#/components/schemas/Identifier'
    CheckId:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
    CheckResponse:
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/Identifier'
        contactId:
          $ref: '#/components/schemas/Identifier'
        status:
          type: string
        gender:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        company:
          type: string
        streetAddress:
          type: string
        streetAddress2:
          type: string
        zipPostalCode:
          type: string
        city:
          type: string
        countryId:
          type: string
        stateProvinceId:
          type: string
        phone:
          type: string
        fax:
          type: string
        dateOfBirth:
          type: string
        existingAccountUsername:
          type: string
        existingAccountEmail:
          type: string
        existingAccountFullname:
          type: string
        emails:
          uniqueItems: false
          type: array
          items:
            type: string
        phones:
          uniqueItems: false
          type: array
          items:
            type: string
    CheckMediaSerialNumber:
      type: object
      properties:
        lastName:
          type: string
        mediaSerialNumber:
          type: string
    CheckNameAndEmail:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
    CheckNamePostalCodeDOB:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        postalCode:
          type: string
        dob:
          type: string
    CheckPassNumberRequest:
      type: object
      properties:
        lastName:
          type: string
        passNumber:
          type: string
    CheckUsername:
      type: object
      properties:
        email:
          type: string
    FindUserNameByEmailRequest:
      type: object
      properties:
        email:
          type: string
    UpdateCustomerUserAccount:
      type: object
      properties:
        newEmail:
          type: string
        newUsername:
          type: string
        newPassword:
          type: string
        allowUsernameChange:
          type: boolean
        customerId:
          $ref: '#/components/schemas/Identifier'
    UpdateCustomerUserAccountResponse:
      type: object
      properties:
        status:
          type: string
        customerId:
          $ref: '#/components/schemas/Identifier'
    ChangePassword:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    ValidatePromptsRequest:
      type: object
      properties:
        promptData:
          type: string
        promptCode:
          type: integer
          format: int32
        productHeaderCode:
          type: string
        contactId:
          type: integer
          format: int32
    ValidatePromptsResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        text:
          type: string
    WorkerChangePassword:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    WorkerChangePasswordResponse:
      type: object
      properties:
        status:
          type: string
    WorkerCheckUsername:
      type: object
      properties:
        username:
          type: string
    WorkerCheckResponse:
      type: object
      properties:
        workerId:
          $ref: '#/components/schemas/Identifier'
        contactId:
          $ref: '#/components/schemas/Identifier'
        status:
          type: string
        gender:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        company:
          type: string
        streetAddress:
          type: string
        streetAddress2:
          type: string
        zipPostalCode:
          type: string
        city:
          type: string
        countryId:
          type: string
        stateProvinceId:
          type: string
        phone:
          type: string
        fax:
          type: string
        dateOfBirth:
          type: string
        existingAccountEmail:
          type: string
        existingAccountFullname:
          type: string
        emails:
          uniqueItems: false
          type: array
          items:
            type: string
        phones:
          uniqueItems: false
          type: array
          items:
            type: string
  requestBodies:
    Contact:
      description: The Contact object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
    Login:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Login'
    Customer:
      description: The Customer object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    Order:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
